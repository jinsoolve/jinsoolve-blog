{"version":3,"file":"component---src-templates-all-category-post-page-tsx-c250df6378795f0ad0f1.js","mappings":"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","sources":["webpack://jinsoolve-blog/./src/components/Categories.tsx","webpack://jinsoolve-blog/./src/templates/AllCategoryPostPage.tsx"],"sourcesContent":["import { Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { motion } from \"framer-motion\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nimport { ALL_POSTS_CATEGORY_NAME, koreanTagNames } from \"../constants\";\nimport { convertSlugToTitle } from \"../utils/string\";\n\ninterface CategoriesProps {\n  currentCategory: string;\n}\n\nexport default function categories({ currentCategory }: CategoriesProps) {\n  const data = useStaticQuery(graphql`\n    query categories {\n      allMdx(\n        filter: { frontmatter: { title: { nin: [\"김진수 포트폴리오\", \"김진수에 대하여\"] }, locale: { eq: null } } }\n      ) {\n        group(field: { frontmatter: { categories: SELECT } }) {\n          categoryPostCount: totalCount\n          category: fieldValue\n        }\n        allPostCount: totalCount\n      }\n    }\n  `);\n\n  const currentCategoryPostCount = data.allMdx.group.find(\n    (group: { category: string; categoryPostCount: number }) => group.category === currentCategory,\n  )?.categoryPostCount;\n\n  return (\n    <Flex marginTop=\"80px\" direction=\"column\" width=\"100%\" alignItems=\"center\">\n      {/* Title + Count */}\n      <motion.div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          width: \"100%\",\n          margin: \"auto\",\n        }}\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ type: \"spring\", stiffness: 100, damping: 20 }}\n      >\n        <Heading\n          fontStyle=\"italic\"\n          fontSize={{ base: currentCategory === ALL_POSTS_CATEGORY_NAME ? \"40px\" : \"30px\", md: \"60px\" }}\n          fontWeight=\"800\"\n          letterSpacing={-1.5}\n        >\n          {convertSlugToTitle(currentCategory)}.\n        </Heading>\n        <Text\n          fontSize={{ base: \"12px\", md: \"16px\" }}\n          fontStyle=\"italic\"\n          color=\"gray.500\"\n          fontWeight=\"200\"\n        >\n          ({currentCategory === ALL_POSTS_CATEGORY_NAME ? data.allMdx.allPostCount : currentCategoryPostCount})\n        </Text>\n      </motion.div>\n\n      {/* category List */}\n      <Flex direction=\"column\">\n        <Flex\n          as=\"nav\"\n          columnGap=\"10px\"\n          rowGap=\"10px\"\n          flexWrap=\"wrap\"\n          marginTop=\"40px\"\n          padding={{ base: \"0 20px\", md: \"0px\" }}\n          width=\"100%\"\n          maxWidth=\"600px\"\n          justifyContent=\"center\"\n        >\n          <Link to=\"/\">\n            <Flex justifyContent=\"center\" alignItems=\"flex-start\">\n              <Text\n                fontSize={{ base: \"14px\", md: \"18px\" }}\n                fontWeight={currentCategory === ALL_POSTS_CATEGORY_NAME ? 700 : 400}\n                _hover={{ textDecoration: \"underline\" }}\n              >\n                ALL CATEGORIES.\n              </Text>\n              <Text fontSize=\"12px\" fontWeight={currentCategory === ALL_POSTS_CATEGORY_NAME ? 700 : 300}>\n                ({data.allMdx.allPostCount})\n              </Text>\n            </Flex>\n          </Link>\n        </Flex>\n        <Flex\n          as=\"nav\"\n          columnGap=\"10px\"\n          rowGap=\"10px\"\n          flexWrap=\"wrap\"\n          marginTop=\"10px\"\n          padding={{ base: \"0 20px\", md: \"0px\" }}\n          width=\"100%\"\n          maxWidth=\"600px\"\n          justifyContent=\"center\"\n        >\n          {Object.values(data.allMdx.group).map((group) => {\n            const { category, categoryPostCount } = group as {\n              category: string;\n              categoryPostCount: number;\n            };\n            return (\n              <Link key={category} to={`/categories/${category}`}>\n                <Flex justifyContent=\"center\" alignItems=\"flex-start\">\n                  <Text\n                    fontSize={{ base: \"14px\", md: \"18px\" }}\n                    fontWeight={currentCategory === category ? 700 : 400}\n                    _hover={{ textDecoration: \"underline\" }}\n                  >\n                    {koreanTagNames[category!] || category}\n                  </Text>\n                  <Text fontSize=\"12px\" fontWeight={currentCategory === category ? 700 : 300}>\n                    ({categoryPostCount})\n                  </Text>\n                </Flex>\n              </Link>\n            );\n          })}\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n","import { Flex } from \"@chakra-ui/react\";\nimport type { HeadFC } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { getSrc } from \"gatsby-plugin-image\";\n\nimport FeaturedPostSection from \"../components/FeaturedPostSection\";\nimport MainLayout from \"../components/MainLayout\";\nimport Pagenation from \"../components/Pagenation\";\nimport PostGrid from \"../components/PostGrid\";\nimport Profile from \"../components/Profile\";\nimport ShortPostSection from \"../components/ShortPostSection\";\nimport Categories from \"../components/Categories\";\nimport { ALL_POSTS_CATEGORY_NAME, DOMAIN } from \"../constants\";\n\nexport const query = graphql`\n  fragment MdxContent on Mdx {\n    frontmatter {\n      thumbnail {\n        childImageSharp {\n          gatsbyImageData\n        }\n      }\n      title\n      updatedAt\n      createdAt\n      description\n      slug\n      categories\n      tags\n    }\n    excerpt(pruneLength: 100)\n  }\n\n  query AllPostPageTemplate($limit: Int, $skip: Int) {\n    # locale은 null인것만 가져옴 (ko)\n    allMdx(\n      filter: {\n        frontmatter: {\n          title: { nin: [\"김진수 포트폴리오\", \"김진수에 대하여\"] }\n         \n          locale: { eq: null }\n        }\n      }\n      sort: { frontmatter: { createdAt: DESC } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      nodes {\n        ...MdxContent\n      }\n\n      pageInfo {\n        currentPage\n        pageCount\n      }\n    }\n\n    ogimage: imageSharp(fluid: { originalName: { eq: \"og-image.png\" } }) {\n      gatsbyImageData\n    }\n\n    profileImage: imageSharp(fluid: { originalName: { eq: \"profile.png\" } }) {\n      gatsbyImageData\n    }\n\n    # locale은 null인것만 가져옴 (ko)\n    shortPosts: allMdx(\n      filter: { frontmatter: { categories: { in: \"short\" }, locale: { eq: null } } }\n      sort: { frontmatter: { createdAt: DESC } }\n      limit: 15\n    ) {\n      nodes {\n        frontmatter {\n          title\n          updatedAt\n          createdAt\n          slug\n          tags\n        }\n      }\n    }\n\n    # locale은 null인것만 가져옴 (ko)\n    featuredPosts: allMdx(\n      filter: { frontmatter: { featured: { eq: true }, locale: { eq: null } } }\n      sort: { frontmatter: { createdAt: DESC } }\n    ) {\n      nodes {\n        ...MdxContent\n      }\n    }\n  }\n`;\n\ninterface AllPostPageTemplateProps {\n  data: GatsbyTypes.AllPostPageTemplateQuery;\n}\n\nexport default function AllPostPageTemplate({ data }: AllPostPageTemplateProps) {\n  const currentPage = data.allMdx.pageInfo.currentPage;\n  const pageCount = data.allMdx.pageInfo.pageCount;\n  const featuredPosts = data.featuredPosts.nodes;\n  const shortPosts = data.shortPosts.nodes;\n\n  return (\n    <MainLayout>\n      <Categories currentCategory={ALL_POSTS_CATEGORY_NAME} />\n\n      {/*<Flex*/}\n      {/*  width=\"100%\"*/}\n      {/*  maxWidth={{ base: \"95%\", md: \"600px\", lg: \"100%\" }}*/}\n      {/*  direction={{ base: \"column\", lg: \"row\" }}*/}\n      {/*  marginTop=\"40px\"*/}\n      {/*  gap={{ base: \"20px\", lg: \"60px\" }}*/}\n      {/*>*/}\n      {/*  <FeaturedPostSection posts={featuredPosts} />*/}\n      {/*  <ShortPostSection posts={shortPosts} />*/}\n      {/*</Flex>*/}\n\n      <PostGrid posts={data.allMdx.nodes} />\n      {pageCount > 1 && <Pagenation currentPage={currentPage} pageCount={pageCount} baseUrl=\"/categories\" />}\n      <Profile />\n    </MainLayout>\n  );\n}\n\nexport const Head: HeadFC<Queries.AllPostPageTemplateQuery> = ({ data }) => {\n  const ogimage = data.ogimage?.gatsbyImageData!;\n  const description = \"머신러닝과 알고리즘을 공부하는 김진수 입니다.\";\n  const title = \"Jinsoolve 블로그\";\n\n  return (\n    <>\n      {/* HTML Meta categories */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      {/* Facebook Meta categories */}\n      <meta property=\"og:url\" content={DOMAIN} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:site_name\" content={title} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={getSrc(ogimage)} />\n      {/*  Twitter Meta categories  */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:domain\" content=\"jinsoolve.netlify.app\" />\n      <meta property=\"twitter:url\" content={DOMAIN} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={description} />\n      <meta name=\"twitter:image\" content={getSrc(ogimage)} />\n      <meta name=\"twitter:label1\" content=\"Category\" />\n      <meta name=\"twitter:data1\" content=\"개발\" />\n    </>\n  );\n};\n"],"names":["categories","_ref","_data$allMdx$group$fi","currentCategory","data","useStaticQuery","currentCategoryPostCount","allMdx","group","find","category","categoryPostCount","React","createElement","Flex","marginTop","direction","width","alignItems","motion","div","style","display","justifyContent","margin","initial","opacity","y","animate","transition","type","stiffness","damping","Heading","fontStyle","fontSize","base","ALL_POSTS_CATEGORY_NAME","md","fontWeight","letterSpacing","convertSlugToTitle","Text","color","allPostCount","as","columnGap","rowGap","flexWrap","padding","maxWidth","Link","to","_hover","textDecoration","Object","values","map","key","koreanTagNames","AllPostPageTemplate","currentPage","pageInfo","pageCount","featuredPosts","nodes","shortPosts","MainLayout","Categories","PostGrid","posts","Pagenation","baseUrl","Profile","Head","_ref2","_data$ogimage","ogimage","gatsbyImageData","description","title","Fragment","name","content","property","DOMAIN","getSrc"],"sourceRoot":""}