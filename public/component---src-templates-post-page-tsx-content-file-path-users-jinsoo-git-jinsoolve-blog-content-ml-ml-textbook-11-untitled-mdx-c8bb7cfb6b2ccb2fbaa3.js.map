{"version":3,"file":"component---src-templates-post-page-tsx-content-file-path-users-jinsoo-git-jinsoolve-blog-content-ml-ml-textbook-11-untitled-mdx-c8bb7cfb6b2ccb2fbaa3.js","mappings":"wNAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,UAAW,YACXC,KAAM,OACNC,GAAI,KACJC,WAAY,eACXC,EAAAA,EAAAA,MAAsBnB,EAAMoB,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,6CAA8CiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,yCAA0C,KAAMgB,EAAAA,cAAoBpB,EAAYK,GAAI,KAAM,KAAMe,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,8BAA+B,KAAMc,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,0BAA2B,KAAMc,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,2CAA4C,MAAO,KAAMc,EAAAA,cAAoBpB,EAAYO,IAAK,KAAMa,EAAAA,cAAoBpB,EAAYQ,GAAI,CAC7lBa,GAAI,gBACH,kCAAmCD,EAAAA,cAAoBpB,EAAYS,EAAG,CACvE,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,+FAAgG,KAAMiB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,sGAAuG,KAAMiB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,+CAAgD,KAAMiB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,gHAAiH,KAAMiB,EAAAA,cAAoBpB,EAAYW,GAAI,CACvlBU,GAAI,gBACH,cAAeD,EAAAA,cAAoBpB,EAAYS,EAAG,CACnD,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,8BAA+BiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,mEAAoE,KAAMgB,EAAAA,cAAoBpB,EAAYW,GAAI,CAChPU,GAAI,gBACH,eAAgBD,EAAAA,cAAoBpB,EAAYS,EAAG,CACpD,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,qCAAsCiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,4CAA6C,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,6CAA8CiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,iIAAkI,KAAMgB,EAAAA,cAAoBpB,EAAYW,GAAI,CAC1eU,GAAI,gBACH,0BAA2BD,EAAAA,cAAoBpB,EAAYS,EAAG,CAC/D,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,6CAA8C,KAAMiB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,yHAA0HiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CAC/Va,IAAK,gGACLC,IAAK,MACF,KAAMN,EAAAA,cAAoBpB,EAAYW,GAAI,CAC7CU,GAAI,gBACH,sBAAuBD,EAAAA,cAAoBpB,EAAYS,EAAG,CAC3D,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,4BAA6BiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,gCAAiC,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,8DAA+DiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,4HAA6HgB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,6CAA8C,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,8BAA+BiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CAC9qBa,IAAK,gGACLC,IAAK,KACHN,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,yDAA0D,KAAMgB,EAAAA,cAAoBpB,EAAYO,IAAK,KAAMa,EAAAA,cAAoBpB,EAAYQ,GAAI,CAC5La,GAAI,gBACH,yBAA0BD,EAAAA,cAAoBpB,EAAYS,EAAG,CAC9D,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,mCAAoC,KAAMiB,EAAAA,cAAoBpB,EAAYK,GAAI,KAAM,KAAMe,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,WAAYc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,gDAAiD,KAAMgB,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,WAAYc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,kDAAmD,MAAO,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,4BAA6B,KAAMiB,EAAAA,cAAoBpB,EAAYW,GAAI,CAC3jBU,GAAI,gBACH,WAAYD,EAAAA,cAAoBpB,EAAYS,EAAG,CAChD,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,kCAAmCiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,iCAAkC,KAAMgB,EAAAA,cAAoBpB,EAAYK,GAAI,KAAM,KAAMe,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,QAASc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,2DAA4D,KAAMgB,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,QAASc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,0DAA2D,MAAO,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,8CAA+CiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CAC5sBa,IAAK,gGACLC,IAAK,MACF,KAAMN,EAAAA,cAAoBpB,EAAYO,IAAK,KAAMa,EAAAA,cAAoBpB,EAAYQ,GAAI,CACxFa,GAAI,gBACH,kCAAmCD,EAAAA,cAAoBpB,EAAYS,EAAG,CACvE,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,qFAAsFiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,wCAAyC,KAAMgB,EAAAA,cAAoBpB,EAAYK,GAAI,KAAM,KAAMe,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,QAASc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,SAAUgB,EAAAA,cAAoBpB,EAAYU,KAAM,CACtac,UAAW,oBACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,SACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,gBACVJ,EAAAA,cAAoBpB,EAAYa,KAAM,CACvCc,MAAO,sCACNP,EAAAA,cAAoBpB,EAAYc,UAAW,KAAMM,EAAAA,cAAoBpB,EAAYe,KAAM,KAAMK,EAAAA,cAAoBpB,EAAYgB,GAAI,KAAM,MAAOI,EAAAA,cAAoBpB,EAAYiB,WAAY,CAC3LW,SAAU,qBACT,gBAAiBR,EAAAA,cAAoBpB,EAAYU,KAAM,CACxDc,UAAW,aACX,cAAe,QACdJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACXK,MAAO,CACLC,OAAQ,cAERV,EAAAA,cAAoBpB,EAAYU,KAAM,CACxCc,UAAW,mBACV,SAAU,wCAAyC,KAAMJ,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,QAASc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYU,KAAM,CAC9Lc,UAAW,oBACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,SACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,gBACVJ,EAAAA,cAAoBpB,EAAYa,KAAM,CACvCc,MAAO,sCACNP,EAAAA,cAAoBpB,EAAYc,UAAW,KAAMM,EAAAA,cAAoBpB,EAAYe,KAAM,KAAMK,EAAAA,cAAoBpB,EAAYgB,GAAI,KAAM,MAAOI,EAAAA,cAAoBpB,EAAYiB,WAAY,CAC3LW,SAAU,qBACT,gBAAiBR,EAAAA,cAAoBpB,EAAYU,KAAM,CACxDc,UAAW,aACX,cAAe,QACdJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACXK,MAAO,CACLC,OAAQ,cAERV,EAAAA,cAAoBpB,EAAYU,KAAM,CACxCc,UAAW,mBACV,SAAU,qCAAsCJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvFc,UAAW,oBACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,SACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,gBACVJ,EAAAA,cAAoBpB,EAAYa,KAAM,CACvCc,MAAO,sCACNP,EAAAA,cAAoBpB,EAAYc,UAAW,KAAMM,EAAAA,cAAoBpB,EAAYe,KAAM,KAAMK,EAAAA,cAAoBpB,EAAYgB,GAAI,KAAM,MAAOI,EAAAA,cAAoBpB,EAAYiB,WAAY,CAC3LW,SAAU,qBACT,gBAAiBR,EAAAA,cAAoBpB,EAAYU,KAAM,CACxDc,UAAW,aACX,cAAe,QACdJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACXK,MAAO,CACLC,OAAQ,cAERV,EAAAA,cAAoBpB,EAAYU,KAAM,CACxCc,UAAW,mBACV,SAAU,oBAAqB,KAAMJ,EAAAA,cAAoBpB,EAAYM,GAAI,KAAM,QAASc,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,2BAA4B,MAAO,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,6CAA8CiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CACpVa,IAAK,gGACLC,IAAK,KACHN,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,+BAAgCgB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CAC7Ja,IAAK,gGACLC,IAAK,KACHN,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,2BAA4BgB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAMgB,EAAAA,cAAoBpB,EAAYY,IAAK,CACzJa,IAAK,gGACLC,IAAK,KACHN,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,uBAAwB,KAAMgB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,gEAAiE,KAAMiB,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,0BAA2BiB,EAAAA,cAAoBpB,EAAYU,KAAM,CACrSc,UAAW,oBACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,SACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,gBACVJ,EAAAA,cAAoBpB,EAAYa,KAAM,CACvCc,MAAO,sCACNP,EAAAA,cAAoBpB,EAAYc,UAAW,KAAMM,EAAAA,cAAoBpB,EAAYe,KAAM,KAAMK,EAAAA,cAAoBpB,EAAYgB,GAAI,KAAM,MAAOI,EAAAA,cAAoBpB,EAAYiB,WAAY,CAC3LW,SAAU,qBACT,gBAAiBR,EAAAA,cAAoBpB,EAAYU,KAAM,CACxDc,UAAW,aACX,cAAe,QACdJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACVJ,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,QACXK,MAAO,CACLC,OAAQ,cAERV,EAAAA,cAAoBpB,EAAYU,KAAM,CACxCc,UAAW,mBACV,SAAU,iBAAkB,KAAMJ,EAAAA,cAAoBpB,EAAYW,GAAI,CACvEU,GAAI,gBACH,YAAaD,EAAAA,cAAoBpB,EAAYS,EAAG,CACjD,cAAe,OACfa,SAAU,KACVC,KAAM,iBACLH,EAAAA,cAAoBpB,EAAYU,KAAM,CACvCc,UAAW,uBACV,OAAQ,KAAMJ,EAAAA,cAAoBpB,EAAYG,EAAG,KAAM,wDAAyDiB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,+BAAgCgB,EAAAA,cAAoBpB,EAAYI,IAAK,KAAM,+CAC3O,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgC,QAASC,GAAa/B,OAAOC,OAAO,CAAC,GAAGgB,EAAAA,EAAAA,MAAsBnB,EAAMoB,YAC3E,OAAOa,EAAYZ,EAAAA,cAAoBY,EAAWjC,EAAOqB,EAAAA,cAAoBtB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,0NC5LA,MACMkC,EAAeC,IACnB,IAAIC,EAAYC,EAAuBC,EAAaC,EAAuBC,EAAaC,EACxF,IAAI,SAACC,EAAQ,KAAEC,EAAI,YAAEC,GAAeT,EACpC,MAAMU,EAAUF,EAAKG,gBAAgBC,MAAMC,KAAIC,IAC7C,IAAIC,EACJ,OAAmD,QAA1CA,EAAoBD,EAAKE,mBAA+C,IAAtBD,OAA+B,EAASA,EAAkBE,SAAW,IAAI,KAE/H,EAAGC,EAAU,EAAGC,IAAeC,EAAAA,EAAAA,WAAS,GACzCC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAA8C,QAA5BtB,EAAaO,EAAKgB,YAAiC,IAAfvB,GAAsF,QAApDC,EAAwBD,EAAWe,mBAAmD,IAA1Bd,OAAtE,EAAkHA,EAAsBe,SAAW,KACjOQ,EAA4C,QAA7BtB,EAAcK,EAAKgB,YAAkC,IAAhBrB,GAAwF,QAArDC,EAAwBD,EAAYa,mBAAmD,IAA1BZ,OAAvE,EAAmHA,EAAsBsB,KACtNC,GAAgBC,EAAAA,EAAAA,GAAmB,CACvCC,MAAM,EACN,UAAU,KAML,EAAGC,EAAW,EAAGC,KAJPH,EAAAA,EAAAA,GAAmB,CAClCC,KAAM,IACNG,GAAI,OAEkCZ,EAAAA,EAAAA,WAAS,IAC3Ca,GAASX,EAAAA,EAAAA,QAAO,OACf,EAAGY,EAAe,EAAGC,IAAkBf,EAAAA,EAAAA,UAAS,MACjD,UAACgB,IAAaC,EAAAA,EAAAA,MAkEpB,OAjEAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnBpB,EAAYqB,OAAOC,WAAa,IAAI,EAItC,OAFAF,IACAC,OAAOE,iBAAiB,SAAUH,GAC3B,KACLC,OAAOG,oBAAoB,SAAUJ,EAAa,CACnD,GACA,KACHD,EAAAA,EAAAA,YAAU,KACR,MAAMM,EAAqBC,KACrBZ,EAAOa,UAAYb,EAAOa,QAAQC,SAASF,EAAMG,SAAW3B,EAAUyB,UAAYzB,EAAUyB,QAAQC,SAASF,EAAMG,UACrHjB,GAAa,EACf,EAKF,OAHID,GACFmB,SAASP,iBAAiB,YAAaE,GAElC,KACLK,SAASN,oBAAoB,YAAaC,EAAmB,CAC9D,GACA,CAACd,KACJQ,EAAAA,EAAAA,YAAU,KACR,MAAMY,EAAcL,IAClB,IAAKZ,EAAOa,QAAS,OACrB,MAAMK,EAAMlB,EAAOa,QAEnB,GADoBK,EAAIJ,SAASF,EAAMG,QACtB,CACf,MAAMI,EAA4B,IAAlBD,EAAIE,UACdC,EAAaC,KAAKC,KAAKL,EAAIE,UAAYF,EAAIM,eAAiBN,EAAIO,cAClEN,GAAWP,EAAMc,OAAS,GAAKL,GAAcT,EAAMc,OAAS,IAC9Dd,EAAMe,gBAEV,CAEA,EAEIC,EAAkBhB,IACtB,IAAKZ,EAAOa,QAAS,OACrB,MAAMK,EAAMlB,EAAOa,QAEnB,GADoBK,EAAIJ,SAASF,EAAMG,QACtB,CACf,MAAMI,EAA4B,IAAlBD,EAAIE,UACdC,EAAaC,KAAKC,KAAKL,EAAIE,UAAYF,EAAIM,eAAiBN,EAAIO,cAClEN,GAAWP,EAAMiB,QAAQ,GAAGC,QAAU,GAAKT,GAAcT,EAAMiB,QAAQ,GAAGC,QAAU,IACtFlB,EAAMe,gBAEV,CAEA,EAUF,OARI9B,IACFmB,SAASP,iBAAiB,QAASQ,EAAa,CAC9Cc,SAAS,IAEXf,SAASP,iBAAiB,YAAamB,EAAiB,CACtDG,SAAS,KAGN,KACLf,SAASN,oBAAoB,QAASO,GACtCD,SAASN,oBAAoB,YAAakB,EAAgB,CAC3D,GACA,CAAC/B,IACG5C,EAAAA,cAAoB+E,EAAAA,EAAY,CACrCC,gBAAiBvC,EAA8C,QAA7BtB,EAAcG,EAAKgB,YAAkC,IAAhBnB,OAAyB,EAASA,EAAY8D,uBAAoBC,GACxIlF,EAAAA,cAAoBmF,EAAAA,EAAM,CAC3BC,UAAW,SACXC,MAAO,QACNrF,EAAAA,cAAoBsF,EAAAA,EAAkB,CACvCC,YAAahE,EAAYgE,YAAYC,KACrClD,KAAMhB,EAAKgB,QACRG,IAAgD,QAA7BrB,EAAcE,EAAKgB,YAAkC,IAAhBlB,OAAyB,EAASA,EAAY6D,oBAAsBjF,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoByF,EAAAA,EAAOC,IAAK,CACzMC,QAAS,CACPC,MAAO,OAETC,QAAS,CACPD,MAAmB,OAErBE,WAAY,CACVC,SAAU,IAEZtF,MAAO,CACLuF,SAAU,QACVC,OAAQjE,EAAW,OAAS,OAC5BkE,UAAW,mBACXC,OAAQ,KAETnG,EAAAA,cAAoBoG,EAAAA,EAAY,CACjC,aAAc,aACdC,aAAc,OACdC,KAAM,KACNV,MAAO,CACLjD,KAAM,OACN4D,GAAI,OACJzD,GAAI,QAEN0D,QAASA,IAAM3D,GAAcD,GAC7B6D,QAAS,QACTC,OAAQ,CACNC,GAAI,cACJC,MAAO,YAETC,OAAQ,CACNC,UAAW,OACXH,GAAI,eAENI,QAASnE,EAAY,OAAS,QAC9BoE,KAAMhH,EAAAA,cAAoBmF,EAAAA,EAAM,CAC9B8B,WAAY,SACZC,eAAgB,UACftE,EAAY5C,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBmH,EAAAA,EAAkB,CAC7FC,QAAS,OACTC,IAAK,IACHrH,EAAAA,cAAoBsH,EAAAA,EAAM,CAC5BC,GAAIC,EAAAA,IACJJ,QAAS,OACTC,IAAK,IACH,KAAOrH,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoByH,EAAAA,EAAiB,CACxFL,QAAS,OACTC,IAAK,IACHrH,EAAAA,cAAoBsH,EAAAA,EAAM,CAC5BC,GAAIC,EAAAA,IACJJ,QAAS,OACTC,IAAK,IACH,SACDrH,EAAAA,cAAoByF,EAAAA,EAAOC,IAAK,CACnCC,QAAS,CACPC,MAAO,UAETC,QAAS,CACPD,MAAOhD,EAAY,MAAQ,UAE7BkD,WAAY,CACVC,SAAU,IAEZ2B,IAAK3E,EACLtC,MAAO,CACLuF,SAAU,QACV2B,IAAK,EACLjH,OAAQ,QACR2E,MAAO,QACPuC,SAAU,OACVzB,OAAQ,GACR0B,UAAW,OACXC,UAAW,WAEZ9H,EAAAA,cAAoB+H,EAAAA,EAAK,CAC1BC,gBAAiB,QACjBlB,UAAW,KACXd,SAAU,WACVtF,OAAQ,OACR2E,MAAO,QACP4C,MAAO,CACLD,gBAAiB,aAElBhI,EAAAA,cAAoBoG,EAAAA,EAAY,CACjC,aAAc,YACdY,KAAMhH,EAAAA,cAAoBkI,EAAAA,EAAW,MACrClC,SAAU,WACV2B,IAAK,OACL/B,MAAO,OACPY,QAASA,IAAM3D,GAAa,GAC5ByD,KAAM,KACN0B,gBAAiB,cACjBpB,MAAO,QACPqB,MAAO,CACLrB,MAAO,WAEP5G,EAAAA,cAAoB+H,EAAAA,EAAK,CAC3BI,GAAI,OACJC,GAAI,OACJC,GAAI,OACJhD,MAAO,QACP2C,gBAAiB,QACjBC,MAAO,CACLD,gBAAiB,aAElBhI,EAAAA,cAAoBsI,EAAAA,EAAiB,CACtCtD,gBAAiB1D,EAAKgB,KAAK2C,wBACrBzD,EAAQ+G,OAAS,GAAKvI,EAAAA,cAAoBwI,EAAAA,EAAS,CACzDjG,YAAaA,EACbf,QAASA,EACTa,cAAeA,IACbrC,EAAAA,cAAoB+H,EAAAA,EAAK,CAC3BU,UAAW,OACXC,GAAI,CACFlJ,IAAK,CACH6G,aAAc,UAGjBhF,GAAWrB,EAAAA,cAAoB2I,EAAAA,EAAc,CAC9CC,aAActH,EAAKsH,eACjB5I,EAAAA,cAAoB6I,EAAAA,EAAS,MAAO7I,EAAAA,cAAoB8I,EAAAA,EAAQ,OAAO,EAEhEC,EAAOC,IAClB,IAAIC,EAAaC,EAAuBC,EAAaC,EAAuBC,EAAaC,EAAuBC,EAAaC,EAAuBC,EAAaC,EAAuBC,EAAwBC,EAAwBC,EAAcC,EAAuBC,EAAcC,EAAuBC,EAAcC,EAAuBC,EAAcC,EAAuBC,EAC5X,IAAI,KAAC/I,GAAQ0H,EACb,MAAMjH,GAAwC,QAA7BkH,EAAc3H,EAAKgB,YAAkC,IAAhB2G,GAAwF,QAArDC,EAAwBD,EAAYnH,mBAAmD,IAA1BoH,OAAvE,EAAmHA,EAAsBnH,SAAW,KAC7NuI,EAAmB,OAAXvI,GAAiD,QAA7BoH,EAAc7H,EAAKgB,YAAkC,IAAhB6G,GAAwF,QAArDC,EAAwBD,EAAYrH,mBAAmD,IAA1BsH,OAAvE,EAAmHA,EAAsBkB,OAAS,oBAAmE,QAA7BjB,EAAc/H,EAAKgB,YAAkC,IAAhB+G,GAAwF,QAArDC,EAAwBD,EAAYvH,mBAAmD,IAA1BwH,OAAvE,EAAmHA,EAAsBgB,OAAS,oBACleC,EAA4C,QAA7BhB,EAAcjI,EAAKgB,YAAkC,IAAhBiH,GAAwF,QAArDC,EAAwBD,EAAYzH,mBAAmD,IAA1B0H,OAAvE,EAAmHA,EAAsBe,YACtNC,EAAwC,QAA7Bf,EAAcnI,EAAKgB,YAAkC,IAAhBmH,GAAwF,QAArDC,EAAwBD,EAAY3H,mBAAmD,IAA1B4H,GAA2G,QAA9DC,EAAyBD,EAAsBe,iBAAkD,IAA3Bd,GAAmH,QAArEC,EAAyBD,EAAuBe,uBAAwD,IAA3Bd,OAArT,EAAkWA,EAAuBe,gBAClcC,EAAwB,OAAX7I,EAAkB,QAAU,QACzC8I,EAAyB,OAAX9I,EAAkB,KAAO,cAC7C,OAAO/B,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,QAAS,KAAMsK,GAAQtK,EAAAA,cAAoB,OAAQ,CACtH8K,KAAM,WACNC,QAAS,wCACP/K,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,SACVD,QAASE,EAAAA,GAAS,WAA4C,QAA9BpB,EAAevI,EAAKgB,YAAmC,IAAjBuH,GAA0F,QAAtDC,EAAwBD,EAAa/H,mBAAmD,IAA1BgI,OAAxE,EAAoHA,EAAsBtH,QACxOxC,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,UACVD,QAAS,YACP/K,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,eACVD,QAAST,IACPtK,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,WACVD,QAAST,IACPtK,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,iBACVD,QAASR,IACPvK,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,WACVD,SAASG,EAAAA,EAAAA,GAAOV,KACdxK,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,YACVD,QAASH,IACP5K,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,eACNC,QAAS,wBACP/K,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,iBACVD,QAAS,0BACP/K,EAAAA,cAAoB,OAAQ,CAC9BgL,SAAU,cACVD,QAASE,EAAAA,GAAS,WAA4C,QAA9BlB,EAAezI,EAAKgB,YAAmC,IAAjByH,GAA0F,QAAtDC,EAAwBD,EAAajI,mBAAmD,IAA1BkI,OAAxE,EAAoHA,EAAsBxH,QACxOxC,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,gBACNC,QAAST,IACPtK,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,sBACNC,QAASR,IACPvK,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,gBACNC,SAASG,EAAAA,EAAAA,GAAOV,KACdxK,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,iBACNC,QAAS,aACP/K,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,gBACNC,QAASF,EAAc,OAAwC,QAA9BZ,EAAe3I,EAAKgB,YAAmC,IAAjB2H,GAA0F,QAAtDC,EAAwBD,EAAanI,mBAAmD,IAA1BoI,OAAxE,EAAoHA,EAAsBiB,WAAW,MACpPnL,EAAAA,cAAoB,OAAQ,CAC9B8K,KAAM,yBACNC,SAAyC,QAA9BZ,EAAe7I,EAAKgB,YAAmC,IAAjB6H,GAA0F,QAAtDC,EAAwBD,EAAarI,mBAAmD,IAA1BsI,GAA2G,QAA9DC,EAAyBD,EAAsBgB,iBAAkD,IAA3Bf,OAA3L,EAAwOA,EAAuBgB,QAAQ,OAAQ,MAAQ,mBACjW,EAGU,SAASC,EAAiB3M,GACvC,OAAOqB,EAAAA,cAAoBa,EAAclC,EAAOqB,EAAAA,cAAoBuL,EAAqB5M,GAC3F,C,sEC/PA,IArCgBmC,IAA4D,IAA3D,cAAEuB,EAAa,QAAEb,EAAO,YAAEe,GAA2BzB,EACpE,OACEd,EAAAwL,cAACrG,EAAAA,EAAI,CAAC8B,WAAW,SAASwB,UAAW,GAAIgD,IAAK,GAC5CzL,EAAAwL,cAACE,EAAAA,EAAI,CAACC,SAAU,GAAIC,WAAW,MAAMhF,MAAM,aAAY,YAGvD5G,EAAAwL,cAACrG,EAAAA,EAAI,CAAC0G,SAAS,SAASxG,MAAM,OAAOoG,IAAK,EAAGE,SAAU,IACpDnK,EAAQG,KAAKI,IACZ,MAAM+J,EAAgB,OAAX/J,EAAe,UAAaQ,EAAW,IAASR,EAAM,UAAUQ,EAE3E,OAAIR,IAAWM,EAEXrC,EAAAwL,cAACE,EAAAA,EAAI,CACHK,IAAKhK,EACL4J,SAAU,GACVC,WAAW,MACXI,eAAe,YACfpF,MAAM,aAEL7E,GAML/B,EAAAwL,cAACS,EAAAA,KAAI,CAACF,IAAKhK,EAAQ+J,GAAIA,GACrB9L,EAAAwL,cAACE,EAAAA,EAAI,CAACC,SAAU,GAAI/E,MAAM,aACvB7E,GAEE,KAIR,C,+HCiFX,IAxGiBjB,IAQuB,IARtB,UACEsK,EAAS,YACTb,EAAW,KACX/H,EAAI,UACJiI,EAAS,MACTH,EAAK,UACL4B,EAAS,QACTC,GACcrL,EAChC,MAAMsL,GAASC,EAAAA,EAAAA,UACb,KAAM,IAAIC,MAAOC,UAAY,IAAID,KAAKlB,GAAWmB,WACjD,CAACnB,IAEGoB,GAAYH,EAAAA,EAAAA,UAChB,IAAMhI,KAAKoI,MAAML,EAAM,QAA6B,IACpD,CAACA,IAGGM,GAAcC,EAAAA,EAAAA,IAAkB,UAAW,WAC3CC,GAAmBD,EAAAA,EAAAA,IAAkB,WAAY,YAKjDE,IAJiBF,EAAAA,EAAAA,IACrB,+BACA,uCAEiBN,EAAAA,EAAAA,UAAQ,IACpB5B,EAGE,QAFE,CAAE9H,KAAM,QAASmK,MAAO,UAGhC,CAACrC,KAEJ,OACEzK,EAAAwL,cAACS,EAAAA,KAAI,CAACH,GAAE,UAAYtJ,GAClBxC,EAAAwL,cAACzD,EAAAA,EAAG,CACFR,GAAG,UACHzB,WAAW,iBACXE,SAAS,WACTK,aAAa,OACbwF,SAAS,SACTxG,MAAO,CAAC1C,KAAM,QAASmK,MAAO,SAC9BC,SAAS,QACTnF,SAAS,OACToF,UAAWH,EACXnM,OAAO,OACPoG,UAAU,KACVmG,YAAY,MACZP,YAAaA,EACbhG,OAAQ,CACNgG,YAAaE,EACb9F,UAAW,KACXoG,OAAQ,YAIVlN,EAAAwL,cAAC2B,EAAAA,EAAW,CACVC,UAAU,QACV3M,MAAO,CACL4M,UAAW,QACX3M,OAAQ,MACR2E,MAAO,QAETiI,MAAO7C,EACPnK,IAAQkC,EAAI,iBAIdxC,EAAAwL,cAACrG,EAAAA,EAAI,CACHoI,cAAc,SACdrG,eAAe,gBACfxG,OAAQ+J,EAAY,MAAQ,OAC5B+C,QAAQ,QAERxN,EAAAwL,cAACzD,EAAAA,EAAG,KACF/H,EAAAwL,cAACiC,EAAAA,EAAO,CAAC9B,SAAS,OAAOC,WAAW,MAAM8B,aAAa,OACpDpD,GAEHtK,EAAAwL,cAACE,EAAAA,EAAI,CAACC,SAAS,OAAO/E,MAAM,WAAW+G,UAAW,EAAGD,aAAa,QAC/DnD,GAAe4B,IAKpBnM,EAAAwL,cAACrG,EAAAA,EAAI,CAAC+B,eAAe,gBAAgBD,WAAW,aAAawB,UAAU,QACrEzI,EAAAwL,cAACE,EAAAA,EAAI,CAACC,SAAS,OAAO/E,MAAM,YACzBsF,EAAeA,EAAS,aAAed,GAE1CpL,EAAAwL,cAACzD,EAAAA,EAAG,CACFC,gBAAgB,WAChBpB,MAAM,QACNP,aAAa,OACbmH,QAAQ,UACR7B,SAAS,OACTC,WAAW,OACXgC,WAAYpB,EAAY,UAAY,UACrC,eAMF,C,mJCFX,IApGqB1L,IAA0C,IAAzC,aAAE8H,GAAiC9H,EACvD,MAAM+M,EAAqBjF,aAAY,EAAZA,EAAclH,MAAM6G,OACzCuF,EAAiBlF,aAAY,EAAZA,EAAclH,MAAMqM,MAAM,EAAG,GAG9CrB,IADYC,EAAAA,EAAAA,IAAkB,QAAS,UACzBA,EAAAA,EAAAA,IAAkB,UAAW,YAC3CC,GAAmBD,EAAAA,EAAAA,IAAkB,WAAY,YAEvD,OACE3M,EAAAwL,cAACzD,EAAAA,EAAG,CAACU,UAAU,SACZoF,EACC7N,EAAAwL,cAACiC,EAAAA,EAAO,CAAClG,GAAG,KAAKoE,SAAU,IAAI,WACpBkC,EAAmB,UAG9B7N,EAAAwL,cAACwC,EAAAA,EAAM,CAACtN,OAAO,QAAQ2F,aAAa,MAAM2B,gBAAgB,WACxDhI,EAAAwL,cAAA,OACEnG,MAAM,KACN3E,OAAO,KACPuN,KAAK,OACLC,QAAQ,YACR3N,MAAM,8BAENP,EAAAwL,cAAA,QACE2C,EAAE,qVACFF,KAAK,aAGTjO,EAAAwL,cAACiC,EAAAA,EAAO,CAAClG,GAAG,KAAKX,MAAM,WAAW+E,SAAU,IAAI,iBAMpD3L,EAAAwL,cAAC4C,EAAAA,EAAI,CACHC,GAAG,OACHC,gBAAiB,CAAExB,MAAO,iBAAkByB,GAAI,kBAChD9C,IAAK,EACLxE,WAAW,SACXC,eAAe,UAEd4G,aAAc,EAAdA,EAAgBnM,KAAKW,IAAI,IAAAkM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACxBjP,EAAAwL,cAAC0D,EAAAA,EAAQ,CACP3H,GAAG,UACHwE,IAAKzJ,SAAiB,QAAbkM,EAAJlM,EAAMR,mBAAW,IAAA0M,OAAb,EAAJA,EAAmBhM,KACxBuE,QAAQ,OACRE,WAAW,SACXC,eAAe,UAEflH,EAAAwL,cAAC2D,EAAAA,EAAQ,CACP7E,MAAuB,QAAlBmE,EAAEnM,EAAKR,mBAAW,IAAA2M,OAAA,EAAhBA,EAAkBnE,MACzBC,YAA6B,QAAlBmE,EAAEpM,EAAKR,mBAAW,IAAA4M,OAAA,EAAhBA,EAAkBnE,YAC/B/H,KAAsB,QAAlBmM,EAAErM,EAAKR,mBAAW,IAAA6M,OAAA,EAAhBA,EAAkBnM,KACxBiI,UACkB,QADTmE,EACPtM,EAAKR,mBAAW,IAAA8M,GAAW,QAAXC,EAAhBD,EAAkBnE,iBAAS,IAAAoE,GAAiB,QAAjBC,EAA3BD,EAA6BnE,uBAAe,IAAAoE,OAA5B,EAAhBA,EAA8CnE,gBAEhDS,UAA2B,QAAlB2D,EAAEzM,EAAKR,mBAAW,IAAAiN,OAAA,EAAhBA,EAAkB3D,UAC7Bc,UAA2B,QAAlB8C,EAAE1M,EAAKR,mBAAW,IAAAkN,OAAA,EAAhBA,EAAkB9C,UAC7Bf,WAA4B,QAAlB8D,EAAE3M,EAAKR,mBAAW,IAAAmN,OAAA,EAAhBA,EAAkB9D,WAC9BgB,QAAS7J,EAAK6J,UAEP,KAKd0B,EAAqB,GACpB7N,EAAAwL,cAACwC,EAAAA,EAAM,CAACK,GAAG,QACTrO,EAAAwL,cAACS,EAAAA,KAAI,CACHH,GAAE,eAAiBlD,EAAalH,MAAM,GAAGI,YAAYqJ,WAAW,IAEhEnL,EAAAwL,cAACzD,EAAAA,EACC,CACAR,GAAG,SACH8G,GAAG,OACHvI,WAAW,iBACX0H,QAAQ,YACRnH,aAAa,OACbuF,WAAW,OACX9E,UAAU,KACVmG,YAAY,MACZP,YAAaA,EACbhG,OAAQ,CACNgG,YAAaE,EACb9F,UAAW,KACXoG,OAAQ,WAEVnG,QAAQ,OACRE,WAAW,UACZ,mBAECjH,EAAAwL,cAAClE,EAAAA,EAAI,CAACC,GAAIJ,EAAAA,EAAkBE,GAAI,EAAG+H,EAAG,EAAGC,EAAG,OAKhD,C,wDC/GV,MAAM5H,GAAkB,E,SAAA,GAAW,CACjC0G,EAAG,gDACHmB,YAAa,mB,wDCFf,MAAMnI,GAAmB,E,SAAA,GAAW,CAClCgH,EAAG,iDACHmB,YAAa,oB,gHCEf,SAASC,EAAOjQ,GACd,OAAO,QACLA,GACCkQ,GAAoB,SAAVA,EAAmB,OAAS,QAAQA,UAAcA,KAEjE,CACA,MAAMN,GAAW,QACf,SAAmBvQ,EAAO+I,GACxB,MAAM,KACJ+H,EAAI,QACJC,EAAO,SACPC,EAAQ,OACRC,EAAM,OACNC,EAAM,QACNC,EAAO,SACPC,KACGC,GACDrR,EACEsR,GAAS,OAAQ,CACrBC,SAAUT,EACVU,WAAYZ,EAAOG,GACnBU,QAASb,EAAOO,GAChBO,gBAAiBV,EACjBW,cAAeV,EACfW,aAAcR,EACdS,WAAYX,IAEd,OAAuB,IAAAY,KAAI,IAAO/K,IAAK,CAAEgC,MAAKgJ,MAAOT,KAAWD,GAClE,IAEFd,EAASI,YAAc,U,6FC/BvB,MAAMlB,GAAO,QAAW,SAAezP,EAAO+I,GAC5C,MAAM,cACJiJ,EAAa,IACblF,EAAG,OACHmF,EAAM,UACNC,EAAS,OACTC,EAAM,IACNC,EAAG,SACHC,EAAQ,SACRC,EAAQ,aACRC,EAAY,YACZC,EAAW,gBACX7C,KACG0B,GACDrR,EACEsR,EAAS,CACblJ,QAAS,OACTqK,kBAAmBT,EACnBU,QAAS5F,EACT6F,WAAYV,EACZW,cAAeV,EACfW,gBAAiBL,EACjBhB,WAAYW,EACZV,QAASW,EACTU,aAAcT,EACdU,aAAcT,EACdU,iBAAkBT,EAClBU,oBAAqBtD,GAEvB,OAAuB,IAAAmC,KAAI,IAAO/K,IAAK,CAAEgC,MAAKgJ,MAAOT,KAAWD,GAClE,IACA5B,EAAKkB,YAAc,M","sources":["webpack://jinsoolve-blog/./content/ML/ml-textbook-11/Untitled.mdx","webpack://jinsoolve-blog/./src/templates/PostPage.tsx","webpack://jinsoolve-blog/./src/components/Locales.tsx","webpack://jinsoolve-blog/./src/components/PostCard.tsx","webpack://jinsoolve-blog/./src/components/RelatedPosts.tsx","webpack://jinsoolve-blog/./node_modules/@chakra-ui/icons/dist/esm/ChevronLeft.mjs","webpack://jinsoolve-blog/./node_modules/@chakra-ui/icons/dist/esm/ChevronRight.mjs","webpack://jinsoolve-blog/./node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","webpack://jinsoolve-blog/./node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\",\n    hr: \"hr\",\n    h1: \"h1\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    img: \"img\",\n    math: \"math\",\n    semantics: \"semantics\",\n    mrow: \"mrow\",\n    mi: \"mi\",\n    annotation: \"annotation\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"레이블이 없는 데이터들을 분석하여 비슷한 데이터들끼리 그룹으로 묶을 것이다.\", React.createElement(_components.br), \"\\n\", \"이를 군집으로 묶는다하여 클러스터링(clustering)이라 한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"k-평균 알고리즘을 이용하여 클러스터 중심 찾기\"), \"\\n\", React.createElement(_components.li, null, \"상향식 방법으로 계층적 군집 트리 만들기\"), \"\\n\", React.createElement(_components.li, null, \"밀집도 기반의 군집 알고리즘을 사용하여 임의 모야을 가진 대상 구분하기\"), \"\\n\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, {\n    id: \"my-heading-1\"\n  }, \"11.1 K-평균 알고리즘을 사용하여 유사한 객체 그룹핑\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-1\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"k-평균 알고리즘은 단순하고 쉽다는 장점이 있지만 그룹의 개수를 정하는 k의 값에 따라 성능이 말도 안되게 달라지고 데이터가 고차원일수록 이 k값을 찾기가 어렵다.\"), \"\\n\", React.createElement(_components.p, null, \"그룹의 대표하는 값을 프로토타입이라고 하는데 연속현 데이터에서는 평균(센트로이드)을 사용하고 범주형 데이터에서는 가장 대표되는 값이나 자주 등장하는 값(메도이드)으로 사용한다.\"), \"\\n\", React.createElement(_components.p, null, \"이 k값에 대한 성능을 평가하는 엘보우 방법이나 실루엣 그래프라는 것이 있다.\"), \"\\n\", React.createElement(_components.p, null, \"k-평균의 초기 센트로이드를 정할 때 똑똑하게 할당하지 못하면 (빈 클러스터가 생겨나거나 한다) 성능이 나빠지거나 수렴이 느려진다. 이를 똑똑하게 할당하기 위해서 k-평균++알고리즘을 이용한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-2\"\n  }, \"k-평균++ 알고리즘\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-2\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"초기 센트로이드가 서로 멀리 떨어지도록 위치한다.\", React.createElement(_components.br), \"\\n\", \"초기 센트로이드를 랜덤하게 고르고 골라지지 않은 샘플들과의 거리를 이용하여 제대로된 센트로이드를 선택하도록 한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-3\"\n  }, \"직접군집 vs 간접군집\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-3\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"한 개의 샘플이 하나의 클러스터에만 포함되어 있으면 직접군집,\", React.createElement(_components.br), \"\\n\", \"한 개의 샘플이 여러 개의 클러스터에 속할 수 있으면 간접군집이라 한다.\"), \"\\n\", React.createElement(_components.p, null, \"간접군집의 대표적인 예시가 퍼지 k-평균으로, FCM 알고리즘이라고 불린다.\", React.createElement(_components.br), \"\\n\", \"샘플이 각 클러스터에 속할 확률값을 이용하여 해당 값이 더는 최적화되기 전까지 최적화시킨다. 클러스터 속할 확률을 계산하는데 비용이 들지만 최적화 수렴할 때까지 반복 횟수가 적게 들기 때문에 k-평균과 비슷한 결과를 만든다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-4\"\n  }, \"엘보우 방법으로 최적의 클러스터 개수 찾기\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-4\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"k-평균 알고리즘을 평가 지표를 이용해 k값을 최적화 시키는 방법이 있다.\"), \"\\n\", React.createElement(_components.p, null, \"기본적인 성능 계산방법은 SSE(Sum of Squared Errors) 즉, 오차 제곱의 합을 통해서 계산한다. 이때 엘보우 방법은 k값에 따른 SSE의 값을 그래프로 그려봤을 때 급감하는 지점을 찾는 것이다.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/ac70ffc3-28d7-45d2-a264-959ba5c23be7/image.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-5\"\n  }, \"실루엣 그래프로 군집 품질을 정량화\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-5\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"클러스터 내부의 점끼리의 거리 지표인 응집력과\", React.createElement(_components.br), \"\\n\", \"다른 클러스터 간의 거리 지표인 분리도를 이용한다.\"), \"\\n\", React.createElement(_components.p, null, \"응집력과 분리도의 차이를 둘 중 큰 값으로 나눈 것이 실루엣 계수 값이다. -1과 1 사이의 값을 갖는다.\", React.createElement(_components.br), \"\\n\", \"즉 응집력과 분리도가 비슷할수록 실루엣은 0에 가까워지고, 차이가 커지면 1에 가깝게 된다. 분리도는 클러스터간 분리가 얼마나 잘 되어 있는지를 나타내고 응집력은 클러스터안이 얼마나 잘 뭉쳐있는지를 나타내기 때문이다.\", React.createElement(_components.br), \"\\n\", \"따라서 실루엣 계수가 0에서 멀리 떨어질수록 좋은 결과로 해석할 수 있다.\"), \"\\n\", React.createElement(_components.p, null, \"클러스터 계수를 일부로 잘못 설정한 예시를 보자.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/48fdc3da-6455-4fcd-b820-70b1c207bf72/image.png\",\n    alt: \"\"\n  }), React.createElement(_components.br), \"\\n\", \"위의 결과는 좋지 않은 것처럼 보이지만 클러스터 2개로 할 수 있는 나름의 최선을 한 결과이다.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, {\n    id: \"my-heading-6\"\n  }, \"11.2 계층적인 트리로 클러스터 조직화\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-6\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"계층 군집에는 병합 계층 군집과 분할 계층 군집이 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"병합 계층 군집\", React.createElement(_components.br), \"\\n\", \"각 샘플을 독립적인 클러스터로 만들고, 하나의 클러스터가 될 때까지 병합시킨다.\"), \"\\n\", React.createElement(_components.li, null, \"분할 계층 군집\", React.createElement(_components.br), \"\\n\", \"전체 샘플을 포함하는 클러스터에서 샘플이 하나 남을 때까지 작은 클러스터로 나눈다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"여기서는 병합 계층 군집을 자세히 다루겠다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-7\"\n  }, \"병합 계층 군집\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-7\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"기본적으로 클러스터 간 거리가 짧은 클러스터부터 합치는데\", React.createElement(_components.br), \"\\n\", \"클러스터 간의 거리를 정의하는 방식이 2가지가 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"단일 연결\", React.createElement(_components.br), \"\\n\", \"각 클러스터(집단)간의 거리는 두 클러스터 내의 샘플들 중 가장 거리가 가까운 샘플의 거리가 된다.\"), \"\\n\", React.createElement(_components.li, null, \"완전 연결\", React.createElement(_components.br), \"\\n\", \"각 클러스터(집단)간의 거리는 두 클러스터 내의 샘플들 중 가장 거리가 먼 샘플들의 거리가 된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"사이킷런에 AgglomerativeClustering 클래스가 구현되어 있다.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/69906749-52eb-4ead-a0e2-d495656c4a53/image.png\",\n    alt: \"\"\n  })), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.h1, {\n    id: \"my-heading-8\"\n  }, \"11.3 DBSCAN을 사용하여 밀집도가 높은 지역 찾기\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-8\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"k평균 알고리즘이나 계층 알고리즘이 원형으로 모양을 가정한 후에 클러스터링을 했다면 DBSCAN은 밀집도를 기반으로 비교적 자유로운 모형을 만든다.\", React.createElement(_components.br), \"\\n\", \"즉, 많이 모여있으면 무슨 모양이든지 해당 부분을 클러스터링한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"핵심 샘플\", React.createElement(_components.br), \"\\n\", \"특정 반경 \", React.createElement(_components.span, {\n    className: \"math math-inline\"\n  }, React.createElement(_components.span, {\n    className: \"katex\"\n  }, React.createElement(_components.span, {\n    className: \"katex-mathml\"\n  }, React.createElement(_components.math, {\n    xmlns: \"http://www.w3.org/1998/Math/MathML\"\n  }, React.createElement(_components.semantics, null, React.createElement(_components.mrow, null, React.createElement(_components.mi, null, \"ϵ\")), React.createElement(_components.annotation, {\n    encoding: \"application/x-tex\"\n  }, \"\\\\epsilon\")))), React.createElement(_components.span, {\n    className: \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.4306em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord mathnormal\"\n  }, \"ϵ\"))))), \" 내부에 있는 샘플의 개수가 MinPts 이상이면 핵심 샘플이다.\"), \"\\n\", React.createElement(_components.li, null, \"경계 샘플\", React.createElement(_components.br), \"\\n\", React.createElement(_components.span, {\n    className: \"math math-inline\"\n  }, React.createElement(_components.span, {\n    className: \"katex\"\n  }, React.createElement(_components.span, {\n    className: \"katex-mathml\"\n  }, React.createElement(_components.math, {\n    xmlns: \"http://www.w3.org/1998/Math/MathML\"\n  }, React.createElement(_components.semantics, null, React.createElement(_components.mrow, null, React.createElement(_components.mi, null, \"ϵ\")), React.createElement(_components.annotation, {\n    encoding: \"application/x-tex\"\n  }, \"\\\\epsilon\")))), React.createElement(_components.span, {\n    className: \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.4306em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord mathnormal\"\n  }, \"ϵ\"))))), \"이내에 Minpts보다 이웃이 적지만 다른 핵심 샘플의 반경 \", React.createElement(_components.span, {\n    className: \"math math-inline\"\n  }, React.createElement(_components.span, {\n    className: \"katex\"\n  }, React.createElement(_components.span, {\n    className: \"katex-mathml\"\n  }, React.createElement(_components.math, {\n    xmlns: \"http://www.w3.org/1998/Math/MathML\"\n  }, React.createElement(_components.semantics, null, React.createElement(_components.mrow, null, React.createElement(_components.mi, null, \"ϵ\")), React.createElement(_components.annotation, {\n    encoding: \"application/x-tex\"\n  }, \"\\\\epsilon\")))), React.createElement(_components.span, {\n    className: \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.4306em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord mathnormal\"\n  }, \"ϵ\"))))), \" 안에 있으면 경계 샘플이다.\"), \"\\n\", React.createElement(_components.li, null, \"잡음 샘플\", React.createElement(_components.br), \"\\n\", \"핵심도 경계 샘플도 아니면 잡음 샘플이다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"모양이 자유롭고 모든 샘플을 클러스터에 할당하지 않고 잡음 샘플을 구분한다.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/ad175116-ed05-4544-ac96-229075d42c77/image.png\",\n    alt: \"\"\n  }), React.createElement(_components.br), \"\\n\", \"위 그림과 같은 반달 모양의 데이터가 있다고 하자.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/41ffe775-d6fc-48ac-963c-80b9654c70ea/image.png\",\n    alt: \"\"\n  }), React.createElement(_components.br), \"\\n\", \"왼쪽은 k평균, 오른쪽은 계층 알고리즘이다.\", React.createElement(_components.br), \"\\n\", React.createElement(_components.img, {\n    src: \"https://velog.velcdn.com/images/jinsoolve/post/6020f4cc-e38f-4813-842b-323844b61a6a/image.png\",\n    alt: \"\"\n  }), React.createElement(_components.br), \"\\n\", \"반면 DBSCAN 은 잘 잡아낸다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 특성 개수가 늘어나면 여전히 차원의 저주로 인해 역효과 증가. (이건 k-평균과 계층군집도 마찬가지)\"), \"\\n\", React.createElement(_components.p, null, \"또한 두개의 하이퍼파라미터(Minpts와 \", React.createElement(_components.span, {\n    className: \"math math-inline\"\n  }, React.createElement(_components.span, {\n    className: \"katex\"\n  }, React.createElement(_components.span, {\n    className: \"katex-mathml\"\n  }, React.createElement(_components.math, {\n    xmlns: \"http://www.w3.org/1998/Math/MathML\"\n  }, React.createElement(_components.semantics, null, React.createElement(_components.mrow, null, React.createElement(_components.mi, null, \"ϵ\")), React.createElement(_components.annotation, {\n    encoding: \"application/x-tex\"\n  }, \"\\\\epsilon\")))), React.createElement(_components.span, {\n    className: \"katex-html\",\n    \"aria-hidden\": \"true\"\n  }, React.createElement(_components.span, {\n    className: \"base\"\n  }, React.createElement(_components.span, {\n    className: \"strut\",\n    style: {\n      height: \"0.4306em\"\n    }\n  }), React.createElement(_components.span, {\n    className: \"mord mathnormal\"\n  }, \"ϵ\"))))), \")을 최적화시켜야 한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"my-heading-9\"\n  }, \"그래프 기반 군집\", React.createElement(_components.a, {\n    \"aria-hidden\": \"true\",\n    tabIndex: \"-1\",\n    href: \"#my-heading-9\"\n  }, React.createElement(_components.span, {\n    className: \"heading-anchor-icon\"\n  }, \"#\"))), \"\\n\", React.createElement(_components.p, null, \"프로토타입 기반 군집인 k-평균, 병합 계층 군집, 밀집도 기반군집(DBSCAN)을 살펴보았다.\", React.createElement(_components.br), \"\\n\", \"그래프 기반 군집인 스펙트럴 군집 또한 소개하겠다.\", React.createElement(_components.br), \"\\n\", \"유사도 행렬 또는 거리 행렬의 고유 벡터를 사용하여 클러스터 관계를 유도한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/jinsoo/git/jinsoolve-blog/content/ML/ml-textbook-11/Untitled.mdx\";\nimport {Box, Flex, IconButton, useBreakpointValue, Icon, useColorMode} from \"@chakra-ui/react\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {getSrc} from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport {ChevronLeftIcon, ChevronRightIcon, CloseIcon} from \"@chakra-ui/icons\";\nimport {motion} from \"framer-motion\";\nimport {MdOutlineMenu} from \"react-icons/md\";\nimport Giscus from \"../components/Giscus\";\nimport Locales from \"../components/Locales\";\nimport PostContentTitle from \"../components/PostContentTitle\";\nimport PostLayout from \"../components/PostLayout\";\nimport Profile from \"../components/Profile\";\nimport RelatedPosts from \"../components/RelatedPosts\";\nimport TableOfContents from \"../components/TableOfContents\";\nimport {DOMAIN} from \"../constants\";\nconst query = \"2641855332\";\nconst PostTemplate = _ref => {\n  var _data$post, _data$post$frontmatte, _data$post2, _data$post2$frontmatt, _data$post3, _data$post4;\n  let {children, data, pageContext} = _ref;\n  const locales = data.otherLocalePost.nodes.map(node => {\n    var _node$frontmatter;\n    return ((_node$frontmatter = node.frontmatter) === null || _node$frontmatter === void 0 ? void 0 : _node$frontmatter.locale) || \"ko\";\n  });\n  const {0: isMobile, 1: setIsMobile} = useState(false);\n  const buttonRef = useRef(null);\n  const currentLocale = ((_data$post = data.post) === null || _data$post === void 0 ? void 0 : (_data$post$frontmatte = _data$post.frontmatter) === null || _data$post$frontmatte === void 0 ? void 0 : _data$post$frontmatte.locale) || \"ko\";\n  const currentSlug = (_data$post2 = data.post) === null || _data$post2 === void 0 ? void 0 : (_data$post2$frontmatt = _data$post2.frontmatter) === null || _data$post2$frontmatt === void 0 ? void 0 : _data$post2$frontmatt.slug;\n  const isLargeScreen = useBreakpointValue({\n    base: false,\n    \"1.75xl\": true\n  });\n  const iconSize = useBreakpointValue({\n    base: \"6\",\n    md: \"8\"\n  });\n  const {0: isTOCOpen, 1: setIsTOCOpen} = useState(false);\n  const tocRef = useRef(null);\n  const {0: TOC_MAX_WIDTH, 1: setTocMaxWidth} = useState(300);\n  const {colorMode} = useColorMode();\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 630);\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (tocRef.current && !tocRef.current.contains(event.target) || buttonRef.current && !buttonRef.current.contains(event.target)) {\n        setIsTOCOpen(false);\n      }\n    };\n    if (isTOCOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isTOCOpen]);\n  useEffect(() => {\n    const handleWheel = event => {\n      if (!tocRef.current) return;\n      const toc = tocRef.current;\n      const isInsideTOC = toc.contains(event.target);\n      if (isInsideTOC) {\n        const isAtTop = toc.scrollTop === 0;\n        const isAtBottom = Math.ceil(toc.scrollTop + toc.clientHeight) >= toc.scrollHeight;\n        if (isAtTop && event.deltaY < 0 || isAtBottom && event.deltaY > 0) {\n          event.preventDefault();\n        }\n      } else {\n        return;\n      }\n    };\n    const handleTouchMove = event => {\n      if (!tocRef.current) return;\n      const toc = tocRef.current;\n      const isInsideTOC = toc.contains(event.target);\n      if (isInsideTOC) {\n        const isAtTop = toc.scrollTop === 0;\n        const isAtBottom = Math.ceil(toc.scrollTop + toc.clientHeight) >= toc.scrollHeight;\n        if (isAtTop && event.touches[0].clientY > 0 || isAtBottom && event.touches[0].clientY < 0) {\n          event.preventDefault();\n        }\n      } else {\n        return;\n      }\n    };\n    if (isTOCOpen) {\n      document.addEventListener(\"wheel\", handleWheel, {\n        passive: false\n      });\n      document.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: false\n      });\n    }\n    return () => {\n      document.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, [isTOCOpen]);\n  return React.createElement(PostLayout, {\n    tableOfContents: isLargeScreen ? (_data$post3 = data.post) === null || _data$post3 === void 0 ? void 0 : _data$post3.myTableOfContents : undefined\n  }, React.createElement(Flex, {\n    direction: \"column\",\n    width: \"100%\"\n  }, React.createElement(PostContentTitle, {\n    readingTime: pageContext.readingTime.text,\n    post: data.post\n  }), !isLargeScreen && ((_data$post4 = data.post) === null || _data$post4 === void 0 ? void 0 : _data$post4.myTableOfContents) && React.createElement(React.Fragment, null, React.createElement(motion.div, {\n    initial: {\n      right: \"0px\"\n    },\n    animate: {\n      right: isTOCOpen ? \"0px\" : \"0px\"\n    },\n    transition: {\n      duration: 0.3\n    },\n    style: {\n      position: \"fixed\",\n      bottom: isMobile ? \"40px\" : \"70px\",\n      transform: \"translateY(-50%)\",\n      zIndex: 10\n    }\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Toggle TOC\",\n    borderRadius: \"full\",\n    size: \"lg\",\n    right: {\n      base: \"12px\",\n      sm: \"15px\",\n      md: \"30px\"\n    },\n    onClick: () => setIsTOCOpen(!isTOCOpen),\n    variant: \"ghost\",\n    _hover: {\n      bg: \"transparent\",\n      color: \"blue.400\"\n    },\n    _focus: {\n      boxShadow: \"none\",\n      bg: \"transparent\"\n    },\n    display: isTOCOpen ? \"none\" : \"block\",\n    icon: React.createElement(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }, isTOCOpen ? React.createElement(React.Fragment, null, React.createElement(ChevronRightIcon, {\n      boxSize: \"20px\",\n      ml: -1\n    }), React.createElement(Icon, {\n      as: MdOutlineMenu,\n      boxSize: \"24px\",\n      ml: -1\n    }), \" \") : React.createElement(React.Fragment, null, React.createElement(ChevronLeftIcon, {\n      boxSize: \"20px\",\n      ml: -1\n    }), React.createElement(Icon, {\n      as: MdOutlineMenu,\n      boxSize: \"24px\",\n      ml: -1\n    }), \" \"))\n  })), React.createElement(motion.div, {\n    initial: {\n      right: \"-300px\"\n    },\n    animate: {\n      right: isTOCOpen ? \"0px\" : \"-300px\"\n    },\n    transition: {\n      duration: 0.3\n    },\n    ref: tocRef,\n    style: {\n      position: \"fixed\",\n      top: 0,\n      height: \"100vh\",\n      width: \"300px\",\n      maxWidth: \"80vw\",\n      zIndex: 10,\n      overflowY: \"auto\",\n      overflowX: \"hidden\"\n    }\n  }, React.createElement(Box, {\n    backgroundColor: \"white\",\n    boxShadow: \"md\",\n    position: \"relative\",\n    height: \"100%\",\n    width: \"300px\",\n    _dark: {\n      backgroundColor: \"gray.800\"\n    }\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Close TOC\",\n    icon: React.createElement(CloseIcon, null),\n    position: \"absolute\",\n    top: \"10px\",\n    right: \"10px\",\n    onClick: () => setIsTOCOpen(false),\n    size: \"sm\",\n    backgroundColor: \"transparent\",\n    color: \"black\",\n    _dark: {\n      color: \"white\"\n    }\n  }), React.createElement(Box, {\n    pt: \"60px\",\n    pb: \"20px\",\n    pl: \"20px\",\n    width: \"300px\",\n    backgroundColor: \"white\",\n    _dark: {\n      backgroundColor: \"gray.800\"\n    }\n  }, React.createElement(TableOfContents, {\n    tableOfContents: data.post.myTableOfContents\n  }))))), locales.length > 1 && React.createElement(Locales, {\n    currentSlug: currentSlug,\n    locales: locales,\n    currentLocale: currentLocale\n  }), React.createElement(Box, {\n    marginTop: \"40px\",\n    sx: {\n      img: {\n        borderRadius: \"10px\"\n      }\n    }\n  }, children), React.createElement(RelatedPosts, {\n    relatedPosts: data.relatedPosts\n  }), React.createElement(Profile, null), React.createElement(Giscus, null)));\n};\nexport const Head = _ref2 => {\n  var _data$post5, _data$post5$frontmatt, _data$post6, _data$post6$frontmatt, _data$post7, _data$post7$frontmatt, _data$post8, _data$post8$frontmatt, _data$post9, _data$post9$frontmatt, _data$post9$frontmatt2, _data$post9$frontmatt3, _data$post10, _data$post10$frontmat, _data$post11, _data$post11$frontmat, _data$post12, _data$post12$frontmat, _data$post13, _data$post13$frontmat, _data$post13$frontmat2;\n  let {data} = _ref2;\n  const locale = ((_data$post5 = data.post) === null || _data$post5 === void 0 ? void 0 : (_data$post5$frontmatt = _data$post5.frontmatter) === null || _data$post5$frontmatt === void 0 ? void 0 : _data$post5$frontmatt.locale) || \"ko\";\n  const title = locale === \"ko\" ? ((_data$post6 = data.post) === null || _data$post6 === void 0 ? void 0 : (_data$post6$frontmatt = _data$post6.frontmatter) === null || _data$post6$frontmatt === void 0 ? void 0 : _data$post6$frontmatt.title) + \" - Jinsoolve \\uBE14\\uB85C\\uADF8\" : ((_data$post7 = data.post) === null || _data$post7 === void 0 ? void 0 : (_data$post7$frontmatt = _data$post7.frontmatter) === null || _data$post7$frontmatt === void 0 ? void 0 : _data$post7$frontmatt.title) + \" - Jinsoolve Blog\";\n  const description = (_data$post8 = data.post) === null || _data$post8 === void 0 ? void 0 : (_data$post8$frontmatt = _data$post8.frontmatter) === null || _data$post8$frontmatt === void 0 ? void 0 : _data$post8$frontmatt.description;\n  const ogimage = (_data$post9 = data.post) === null || _data$post9 === void 0 ? void 0 : (_data$post9$frontmatt = _data$post9.frontmatter) === null || _data$post9$frontmatt === void 0 ? void 0 : (_data$post9$frontmatt2 = _data$post9$frontmatt.thumbnail) === null || _data$post9$frontmatt2 === void 0 ? void 0 : (_data$post9$frontmatt3 = _data$post9$frontmatt2.childImageSharp) === null || _data$post9$frontmatt3 === void 0 ? void 0 : _data$post9$frontmatt3.gatsbyImageData;\n  const metaLocale = locale === \"ko\" ? \"ko_KR\" : \"en_US\";\n  const devCategory = locale === \"ko\" ? \"개발\" : \"Development\";\n  return React.createElement(React.Fragment, null, React.createElement(\"title\", null, title), React.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1\"\n  }), React.createElement(\"meta\", {\n    property: \"og:url\",\n    content: DOMAIN + \"/posts/\" + ((_data$post10 = data.post) === null || _data$post10 === void 0 ? void 0 : (_data$post10$frontmat = _data$post10.frontmatter) === null || _data$post10$frontmat === void 0 ? void 0 : _data$post10$frontmat.slug)\n  }), React.createElement(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), React.createElement(\"meta\", {\n    property: \"og:site_name\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    property: \"og:description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    property: \"og:image\",\n    content: getSrc(ogimage)\n  }), React.createElement(\"meta\", {\n    property: \"og:locale\",\n    content: metaLocale\n  }), React.createElement(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), React.createElement(\"meta\", {\n    property: \"twitter:domain\",\n    content: \"jinsoolve.netlify.app\"\n  }), React.createElement(\"meta\", {\n    property: \"twitter:url\",\n    content: DOMAIN + \"/posts/\" + ((_data$post11 = data.post) === null || _data$post11 === void 0 ? void 0 : (_data$post11$frontmat = _data$post11.frontmatter) === null || _data$post11$frontmat === void 0 ? void 0 : _data$post11$frontmat.slug)\n  }), React.createElement(\"meta\", {\n    name: \"twitter:title\",\n    content: title\n  }), React.createElement(\"meta\", {\n    name: \"twitter:description\",\n    content: description\n  }), React.createElement(\"meta\", {\n    name: \"twitter:image\",\n    content: getSrc(ogimage)\n  }), React.createElement(\"meta\", {\n    name: \"twitter:label1\",\n    content: \"Category\"\n  }), React.createElement(\"meta\", {\n    name: \"twitter:data1\",\n    content: devCategory + \" | \" + ((_data$post12 = data.post) === null || _data$post12 === void 0 ? void 0 : (_data$post12$frontmat = _data$post12.frontmatter) === null || _data$post12$frontmat === void 0 ? void 0 : _data$post12$frontmat.categories[0])\n  }), React.createElement(\"meta\", {\n    name: \"article:published_time\",\n    content: ((_data$post13 = data.post) === null || _data$post13 === void 0 ? void 0 : (_data$post13$frontmat = _data$post13.frontmatter) === null || _data$post13$frontmat === void 0 ? void 0 : (_data$post13$frontmat2 = _data$post13$frontmat.createdAt) === null || _data$post13$frontmat2 === void 0 ? void 0 : _data$post13$frontmat2.replace(/[/]/g, \"-\")) + \"T09:00:00.000Z\"\n  }));\n};\nPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import { Flex, Text } from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\n\ninterface LocalesProps {\n  currentLocale: string;\n  currentSlug: string;\n  locales: readonly string[];\n}\n\nconst Locales = ({ currentLocale, locales, currentSlug }: LocalesProps) => {\n  return (\n    <Flex alignItems=\"center\" marginTop={10} gap={2}>\n      <Text fontSize={16} fontWeight=\"800\" color=\"black.900\">\n        Locales:\n      </Text>\n      <Flex overflow=\"hidden\" width=\"100%\" gap={2} fontSize={12}>\n        {locales.map((locale) => {\n          const to = locale === \"ko\" ? `/posts/${currentSlug}` : `/${locale}/posts/${currentSlug}`;\n\n          if (locale === currentLocale) {\n            return (\n              <Text\n                key={locale}\n                fontSize={16}\n                fontWeight=\"600\"\n                textDecoration=\"underline\"\n                color=\"black.900\"\n              >\n                {locale}\n              </Text>\n            );\n          }\n\n          return (\n            <Link key={locale} to={to}>\n              <Text fontSize={16} color=\"black.900\">\n                {locale}\n              </Text>\n            </Link>\n          );\n        })}\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Locales;\n","import { Box, Flex, Heading, Text } from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { useMemo } from \"react\";\n\nimport { useColorModeValue } from \"@chakra-ui/react\";\n\ninterface PostCardProps {\n  title: string;\n  description: string;\n  slug: string;\n  createdAt: string;\n  updatedAt?: string;\n  categories: readonly (string | null)[];\n  thumbnail?: IGatsbyImageData;\n  excerpt?: string;\n}\n\nconst PostCard = ({\n                    createdAt,\n                    description,\n                    slug,\n                    thumbnail,\n                    title,\n                    updatedAt,\n                    excerpt,\n                  }: PostCardProps) => {\n  const diffMs = useMemo(\n    () => new Date().getTime() - new Date(createdAt).getTime(),\n    [createdAt]\n  );\n  const isNewPost = useMemo(\n    () => Math.floor(diffMs / (1000 * 60 * 60 * 24)) <= 10,\n    [diffMs]\n  );\n\n  const borderColor = useColorModeValue(\"gray.50\", \"#444548\");\n  const hoverBorderColor = useColorModeValue(\"blue.500\", \"blue.400\");\n  const boxShadowColor = useColorModeValue(\n    \"0 4px 6px rgba(0, 0, 0, 0.3)\",\n    \"0 4px 6px rgba(255, 255, 255, 0.3)\"\n  );\n  const cardHeight = useMemo(() => {\n    if (!thumbnail) {\n      return { base: \"190px\", sm_md: \"380px\" };\n    }\n    return \"380px\";\n  }, [thumbnail]);\n\n  return (\n    <Link to={`/posts/${slug}`}>\n      <Box\n        as=\"article\"\n        transition=\"all 0.25s ease\"\n        position=\"relative\"\n        borderRadius=\"20px\"\n        overflow=\"hidden\"\n        width={{base: \"280px\", sm_md: \"290px\"}}\n        minWidth=\"205px\"\n        maxWidth=\"85vw\"\n        minHeight={cardHeight}\n        height=\"100%\"\n        boxShadow=\"xl\"\n        borderWidth=\"2px\"\n        borderColor={borderColor}\n        _hover={{\n          borderColor: hoverBorderColor,\n          boxShadow: \"xl\",\n          cursor: \"pointer\",\n        }}\n      >\n        {/* 썸네일 */}\n        <GatsbyImage\n          objectFit=\"cover\"\n          style={{\n            maxHeight: \"171px\",\n            height: \"45%\",\n            width: \"100%\"\n          }}\n          image={thumbnail}\n          alt={`${slug} cover image`}\n        />\n\n        {/* 메타 정보와 제목 */}\n        <Flex\n          flexDirection=\"column\"\n          justifyContent=\"space-between\"\n          height={thumbnail ? \"55%\" : \"100%\"}\n          padding=\"20px\"\n        >\n          <Box>\n            <Heading fontSize=\"20px\" fontWeight=\"700\" marginBottom=\"8px\">\n              {title}\n            </Heading>\n            <Text fontSize=\"16px\" color=\"gray.600\" noOfLines={2} marginBottom=\"10px\">\n              {description || excerpt}\n            </Text>\n          </Box>\n\n          {/* 날짜 및 New Post 태그 */}\n          <Flex justifyContent=\"space-between\" alignItems=\"flex-start\" marginTop=\"10px\">\n            <Text fontSize=\"14px\" color=\"gray.500\">\n              {updatedAt ? `${updatedAt} (updated)` : createdAt}\n            </Text>\n            <Box\n              backgroundColor=\"blue.400\"\n              color=\"white\"\n              borderRadius=\"12px\"\n              padding=\"4px 8px\"\n              fontSize=\"12px\"\n              fontWeight=\"bold\"\n              visibility={isNewPost ? \"visible\" : \"hidden\"} // 공간 유지하면서 숨김 처리\n            >\n              NEW POST\n            </Box>\n          </Flex>\n        </Flex>\n      </Box>\n    </Link>\n  );\n};\n\nexport default PostCard;","import {\n  Box,\n  Center,\n  Grid,\n  GridItem,\n  Heading,\n  useColorModeValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { Link } from \"gatsby\";\nimport { ChevronRightIcon } from \"@chakra-ui/icons\";\nimport PostCard from \"./PostCard\";\n\ninterface RelatedPostsProps {\n  relatedPosts: GatsbyTypes.PostPageQuery[\"relatedPosts\"];\n}\n\nconst RelatedPosts = ({ relatedPosts }: RelatedPostsProps) => {\n  const relatedPostsLength = relatedPosts?.nodes.length;\n  const postsToDisplay = relatedPosts?.nodes.slice(0, 4); // 6개만 표시\n\n  const textColor = useColorModeValue(\"white\", \"black\");\n  const borderColor = useColorModeValue(\"gray.50\", \"#444548\");\n  const hoverBorderColor = useColorModeValue(\"blue.500\", \"blue.400\");\n\n  return (\n    <Box marginTop=\"200px\">\n      {relatedPostsLength ? (\n        <Heading as=\"h2\" fontSize={24}>\n          관련 포스트가 {relatedPostsLength}개 있어요.\n        </Heading>\n      ) : (\n        <Center height=\"100px\" borderRadius=\"8px\" backgroundColor=\"blue.50\">\n          <svg\n            width=\"24\"\n            height=\"24\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M12 1.999c5.524 0 10.002 4.478 10.002 10.002 0 5.523-4.478 10.001-10.002 10.001-5.524 0-10.002-4.478-10.002-10.001C1.998 6.477 6.476 1.999 12 1.999Zm-.004 8.25a1 1 0 0 0-.992.885l-.007.116.003 5.502.007.117a1 1 0 0 0 1.987-.002L13 16.75l-.003-5.501-.007-.117a1 1 0 0 0-.994-.882ZM12 6.5a1.251 1.251 0 1 0 0 2.503A1.251 1.251 0 0 0 12 6.5Z\"\n              fill=\"#3182ce\"\n            />\n          </svg>\n          <Heading as=\"h2\" color=\"blue.500\" fontSize={20}>\n            관련 포스트가 없어요.\n          </Heading>\n        </Center>\n      )}\n\n      <Grid\n        mt=\"20px\"\n        templateColumns={{ sm_md: \"repeat(2, 1fr)\", lg: \"repeat(2, 1fr)\" }}\n        gap={6}\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {postsToDisplay?.map((post) => (\n          <GridItem\n            as=\"article\"\n            key={post?.frontmatter?.slug}\n            display=\"flex\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <PostCard\n              title={post.frontmatter?.title!}\n              description={post.frontmatter?.description!}\n              slug={post.frontmatter?.slug!}\n              thumbnail={\n                post.frontmatter?.thumbnail?.childImageSharp?.gatsbyImageData!\n              }\n              createdAt={post.frontmatter?.createdAt!}\n              updatedAt={post.frontmatter?.updatedAt!}\n              categories={post.frontmatter?.categories!}\n              excerpt={post.excerpt!}\n            />\n          </GridItem>\n        ))}\n      </Grid>\n\n      {/* 더 보기 링크 */}\n      {relatedPostsLength > 6 && (\n        <Center mt=\"20px\">\n          <Link\n            to={`/categories/${relatedPosts.nodes[0].frontmatter.categories[0]}`}\n          >\n            <Box\n              // color={textColor}\n              as=\"button\"\n              mt=\"20px\"\n              transition=\"all 0.25s ease\"\n              padding=\"10px 20px\"\n              borderRadius=\"12px\"\n              fontWeight=\"bold\"\n              boxShadow=\"xl\"\n              borderWidth=\"2px\"\n              borderColor={borderColor}\n              _hover={{\n                borderColor: hoverBorderColor,\n                boxShadow: \"xl\",\n                cursor: \"pointer\",\n              }}\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              더 많은 관련 포스트 보러가기\n              <Icon as={ChevronRightIcon} ml={2} w={5} h={5} />\n            </Box>\n          </Link>\n        </Center>\n      )}\n    </Box>\n  );\n};\n\nexport default RelatedPosts;\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronLeftIcon = createIcon({\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\",\n  displayName: \"ChevronLeftIcon\"\n});\n\nexport { ChevronLeftIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronRightIcon = createIcon({\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\",\n  displayName: \"ChevronRightIcon\"\n});\n\nexport { ChevronRightIcon };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n"],"names":["_createMdxContent","props","_components","Object","assign","p","br","ul","li","hr","h1","a","span","h2","img","math","semantics","mrow","mi","annotation","_provideComponents","components","React","id","tabIndex","href","className","src","alt","xmlns","encoding","style","height","wrapper","MDXLayout","PostTemplate","_ref","_data$post","_data$post$frontmatte","_data$post2","_data$post2$frontmatt","_data$post3","_data$post4","children","data","pageContext","locales","otherLocalePost","nodes","map","node","_node$frontmatter","frontmatter","locale","isMobile","setIsMobile","useState","buttonRef","useRef","currentLocale","post","currentSlug","slug","isLargeScreen","useBreakpointValue","base","isTOCOpen","setIsTOCOpen","md","tocRef","TOC_MAX_WIDTH","setTocMaxWidth","colorMode","useColorMode","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","handleClickOutside","event","current","contains","target","document","handleWheel","toc","isAtTop","scrollTop","isAtBottom","Math","ceil","clientHeight","scrollHeight","deltaY","preventDefault","handleTouchMove","touches","clientY","passive","PostLayout","tableOfContents","myTableOfContents","undefined","Flex","direction","width","PostContentTitle","readingTime","text","motion","div","initial","right","animate","transition","duration","position","bottom","transform","zIndex","IconButton","borderRadius","size","sm","onClick","variant","_hover","bg","color","_focus","boxShadow","display","icon","alignItems","justifyContent","ChevronRightIcon","boxSize","ml","Icon","as","MdOutlineMenu","ChevronLeftIcon","ref","top","maxWidth","overflowY","overflowX","Box","backgroundColor","_dark","CloseIcon","pt","pb","pl","TableOfContents","length","Locales","marginTop","sx","RelatedPosts","relatedPosts","Profile","Giscus","Head","_ref2","_data$post5","_data$post5$frontmatt","_data$post6","_data$post6$frontmatt","_data$post7","_data$post7$frontmatt","_data$post8","_data$post8$frontmatt","_data$post9","_data$post9$frontmatt","_data$post9$frontmatt2","_data$post9$frontmatt3","_data$post10","_data$post10$frontmat","_data$post11","_data$post11$frontmat","_data$post12","_data$post12$frontmat","_data$post13","_data$post13$frontmat","_data$post13$frontmat2","title","description","ogimage","thumbnail","childImageSharp","gatsbyImageData","metaLocale","devCategory","name","content","property","DOMAIN","getSrc","categories","createdAt","replace","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","createElement","gap","Text","fontSize","fontWeight","overflow","to","key","textDecoration","Link","updatedAt","excerpt","diffMs","useMemo","Date","getTime","isNewPost","floor","borderColor","useColorModeValue","hoverBorderColor","cardHeight","sm_md","minWidth","minHeight","borderWidth","cursor","GatsbyImage","objectFit","maxHeight","image","flexDirection","padding","Heading","marginBottom","noOfLines","visibility","relatedPostsLength","postsToDisplay","slice","Center","fill","viewBox","d","Grid","mt","templateColumns","lg","_post$frontmatter","_post$frontmatter2","_post$frontmatter3","_post$frontmatter4","_post$frontmatter5","_post$frontmatter5$th","_post$frontmatter5$th2","_post$frontmatter6","_post$frontmatter7","_post$frontmatter8","GridItem","PostCard","w","h","displayName","spanFn","value","area","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","rest","styles","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","__css","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns"],"sourceRoot":""}