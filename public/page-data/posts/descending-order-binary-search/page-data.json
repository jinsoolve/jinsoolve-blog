{"componentChunkName":"component---src-templates-post-page-tsx-content-file-path-users-jinsoo-git-jinsoolve-blog-content-short-descending-order-binary-search-untitled-md","path":"/posts/descending-order-binary-search/","result":{"data":{"post":{"frontmatter":{"slug":"descending-order-binary-search","title":"c++에서 내림차순에 대한 lower_bound와 upper_bound하기","locale":null,"description":null,"categories":["short"],"tags":[],"createdAt":"2025/02/10","updatedAt":null,"thumbnail":null},"myTableOfContents":{"items":[]}},"otherLocalePost":{"nodes":[{"frontmatter":{"locale":null}}]},"relatedPosts":{"nodes":[{"frontmatter":{"slug":"diff-between-word2vec-and-glove","title":"Word2Vec과 GloVe의 차이는 무엇일까?","description":null,"categories":["short"],"tags":null,"createdAt":"2025/04/27","updatedAt":null,"thumbnail":null},"excerpt":"그래서 Word2Vec과 GloVe의 차이는 대체 뭘까? 개인적으로 매우 헷갈리는 topic이라서 내 개인 이해를 정리해 보았다.\n\n먼저 standard한 Word2Vec과…"},{"frontmatter":{"slug":"cross-entropy-and-softmax","title":"Cross Entropy와 Softmax","description":null,"categories":["short"],"tags":null,"createdAt":"2025/04/27","updatedAt":null,"thumbnail":null},"excerpt":"Cross-entropy와 Softmax가 자꾸 헷갈려서 정리를 한 번 해보자. +) 추가로 sigmoid와 tanh 도 보자.\n\nSoftmax(zi)=ezi∑jezj\\text…"},{"frontmatter":{"slug":"why-do-batch-normalization","title":"Batch Normalization을 하는 이유는 뭘까?","description":null,"categories":["short"],"tags":null,"createdAt":"2025/04/25","updatedAt":null,"thumbnail":null},"excerpt":"각 batch 데이터마다 분포가 다르게 되면 모델의 학습이 어렵다. 즉, 전에는 0 ~ 20 데이터가 들어와서 그거대로 학습했는데, 이번 batch에는 2000 ~ 4000…"},{"frontmatter":{"slug":"formula-for-the-third-side-of-a-triangle-given-two-sides-and-the-included-angle","title":"삼격형의 두 변의 길이와 사잇각을 알 때, 나머지 한 변의 길이를 구하는 공식","description":null,"categories":["short"],"tags":["수학-공식"],"createdAt":"2025/02/20","updatedAt":null,"thumbnail":null},"excerpt":"위와 같은 삼각형이 존재할 때, 변의 길이 b, c와 그 사잇각 α\\alphaα를 알고 있다고 가정하자. 이때 a의 길이를 구하는 공식은 다음과 같다. a=b2+c2−2bccos…"},{"frontmatter":{"slug":"how-to-calculate-triangle-area","title":"세 점의 좌표가 주어졌을 때 삼각형의 면적 구하는 방법","description":null,"categories":["short"],"tags":["수학-공식"],"createdAt":"2025/01/13","updatedAt":null,"thumbnail":null},"excerpt":"세 점의 좌표가 주어졌을 때 어떻게 빠르게 삼각형의 너비를 계산할 수 있을까? 세 점 A(x1,y1),B(x2,y2),C(x3,y3)A(x_1, y_1), B(x_2, y_2),…"},{"frontmatter":{"slug":"count-bit-in-cpp","title":"C++에서 이진수의 비트 수를 세는 방법","description":null,"categories":["short"],"tags":[],"createdAt":"2025/01/13","updatedAt":null,"thumbnail":null},"excerpt":"101101101101101101 이런 이진수가 주어질 때 C++에서 1의 개수를 세려면 어떻게 해야 할까? // unsigned int\n__builtin_popcount();…"},{"frontmatter":{"slug":"ml-textbook-4","title":"표준화와 정규화","description":"표준화와 정규화에 대해서 간단히 알아보자.","categories":["ML","short"],"tags":["표준화","정규화"],"createdAt":"2025/01/09","updatedAt":null,"thumbnail":null},"excerpt":"ex = np.array([0, 1, 2, 3, 4, 5]) print('표준화:', (ex - ex.mean()) / ex.std())\n\n\n평균=0, 분산=1로 만든다.\n\nfr…"},{"frontmatter":{"slug":"ml-textbook-1","title":"로지스틱 회귀의 비용 함수는 왜 이렇게 생겼을까?","description":"로지스틱 회귀의 비용 함수는 왜 이렇게 생겼을까?","categories":["ML","short"],"tags":["로지스틱","회귀","손실함수"],"createdAt":"2024/12/26","updatedAt":null,"thumbnail":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/c8138af222d0a534b9d3f8006c1ec625/c497a/cover.png","srcSet":"/static/c8138af222d0a534b9d3f8006c1ec625/88418/cover.png 193w,\n/static/c8138af222d0a534b9d3f8006c1ec625/5b669/cover.png 385w,\n/static/c8138af222d0a534b9d3f8006c1ec625/c497a/cover.png 770w","sizes":"(min-width: 770px) 770px, 100vw"},"sources":[{"srcSet":"/static/c8138af222d0a534b9d3f8006c1ec625/e91f5/cover.webp 193w,\n/static/c8138af222d0a534b9d3f8006c1ec625/94672/cover.webp 385w,\n/static/c8138af222d0a534b9d3f8006c1ec625/75d07/cover.webp 770w","type":"image/webp","sizes":"(min-width: 770px) 770px, 100vw"}]},"width":770,"height":709.9999999999999}}}},"excerpt":"로지스틱 회귀의 비용함수는 다음과 같이 생겼다. J(w)=−1m∑i=1m[y(i)log(σ(z(i)))+(1−y(i))log(1−σ(z(i)))]J(w) = -\\frac{1}{m…"}]}},"pageContext":{"categories":["short"],"tags":[],"slug":"descending-order-binary-search","id":"a3c33843-eccb-56cf-90e4-2d6006535e89","myTableOfContents":{"items":[]},"readingTime":{"text":"1 min read","minutes":0.12,"time":7200,"words":60},"frontmatter":{"slug":"descending-order-binary-search","title":"c++에서 내림차순에 대한 lower_bound와 upper_bound하기","description":null,"thumbnail":null,"categories":["short"],"tags":[],"createdAt":"2025/02/10","updatedAt":null,"featured":false,"locale":null}}},"staticQueryHashes":["3461282698"],"slicesMap":{}}