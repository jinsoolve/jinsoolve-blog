{"componentChunkName":"component---src-templates-featured-page-tsx","path":"/allFeaturedPosts/PS/2/","result":{"data":{"allMdx":{"totalCount":14,"nodes":[{"frontmatter":{"thumbnail":null,"title":"백준 24491 - Searching for Soulmates","updatedAt":null,"createdAt":"2025/01/13","description":null,"slug":"boj-24491","categories":["PS"]},"excerpt":"각 테스트케이스마다 2개의 1 ~ 101810^{18}1018의 수 a, b가 주어질 때, a를 b로 만드는데 드는 최소의 연산 횟수를 구하는 문제이다. 이때 연산은 ×2\\tim…"},{"frontmatter":{"thumbnail":null,"title":"백준 10321 - 요새 건설","updatedAt":null,"createdAt":"2025/01/13","description":"","slug":"boj-10321","categories":["PS"]},"excerpt":"핵심 아이디어# 껍질에 있는 점들을 대상으로 임의의 대각선에 대해서 해당 대각선에서 가장 먼 점 2개를 고르면 해당 대각선으로 만들 수 있는 가장 큰 영역이다. 이때 먼점 2개는…"},{"frontmatter":{"thumbnail":null,"title":"백준 33007 - Greatest of the Greatest Common Divisors","updatedAt":null,"createdAt":"2025/01/11","description":null,"slug":"boj-33007","categories":["PS"]},"excerpt":"핵심 아이디어# 오프라인 쿼리 방식으로, r을 순차적으로 증가시키면서 r을 새롭게 포함시킬 때 해당 인덱스 r과 어떤 인덱스 l을 추가하면 어떤 gcdVal을 얻을 수 있는 지를…"},{"frontmatter":{"thumbnail":null,"title":"백준 17407 - 괄호 문자열과 쿼리","updatedAt":null,"createdAt":"2025/01/01","description":"백준 17407 - 괄호 문자열과 쿼리","slug":"boj-17407","categories":["PS"]},"excerpt":"풀이# (을 +1, )을 -1로 한 다음 누적합을 먼저 계산한다.\n 이 누적합에 대한 lazy segment tree를 만든다.\n\n만약 x번째 문자를 (에서 )으로 바꾼다면 x…"},{"frontmatter":{"thumbnail":null,"title":"백준 1462 - 퀴즈쇼","updatedAt":null,"createdAt":"2024/12/26","description":"백준 1462 - 퀴즈쇼","slug":"boj-1462","categories":["PS"]},"excerpt":"풀이# dp[i][0] := 1~i 까지 문제를 푸는데, i를 풀고 나서 남은 코인의 갯수가 0개일 때의 최댓값\n dp[i][1] := 1~i 가지 문제를 푸는데, i를 풀고 나서…"}],"pageInfo":{"currentPage":2,"pageCount":2}},"ogimage":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/f689f8b3b021090c7d4495f61be56e2f/ee21c/og-image.png","srcSet":"/static/f689f8b3b021090c7d4495f61be56e2f/5fe58/og-image.png 256w,\n/static/f689f8b3b021090c7d4495f61be56e2f/5ca6c/og-image.png 512w,\n/static/f689f8b3b021090c7d4495f61be56e2f/ee21c/og-image.png 1024w","sizes":"(min-width: 1024px) 1024px, 100vw"},"sources":[{"srcSet":"/static/f689f8b3b021090c7d4495f61be56e2f/e818d/og-image.webp 256w,\n/static/f689f8b3b021090c7d4495f61be56e2f/7948c/og-image.webp 512w,\n/static/f689f8b3b021090c7d4495f61be56e2f/aa8b2/og-image.webp 1024w","type":"image/webp","sizes":"(min-width: 1024px) 1024px, 100vw"}]},"width":1024,"height":600}},"profileImage":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/9379464f2e13cd33a2639502a84c1285/4f0b5/profile.jpg","srcSet":"/static/9379464f2e13cd33a2639502a84c1285/cb2c7/profile.jpg 103w,\n/static/9379464f2e13cd33a2639502a84c1285/66f23/profile.jpg 207w,\n/static/9379464f2e13cd33a2639502a84c1285/4f0b5/profile.jpg 413w","sizes":"(min-width: 413px) 413px, 100vw"},"sources":[{"srcSet":"/static/9379464f2e13cd33a2639502a84c1285/8e689/profile.webp 103w,\n/static/9379464f2e13cd33a2639502a84c1285/43852/profile.webp 207w,\n/static/9379464f2e13cd33a2639502a84c1285/f76dc/profile.webp 413w","type":"image/webp","sizes":"(min-width: 413px) 413px, 100vw"}]},"width":413,"height":531}},"shortPosts":{"nodes":[{"frontmatter":{"title":"백준 28129 - 2022 APC가 어려웠다고요?","updatedAt":null,"createdAt":"2025/03/28","slug":"boj-28129","tags":["다이나믹-프로그래밍","누적합"],"categories":["PS"]},"excerpt":"위 포스트는 백준 28129 - 2022 APC가 어려웠다고요?의 풀이입니다. dp[i][j] := i번째 수가 j가 되는 경우의 수\n\ndp[i][j]=∑k=max(j−k,a[i−…"},{"frontmatter":{"title":"백준 1787 - 문자열의 주기 예측","updatedAt":null,"createdAt":"2025/03/05","slug":"boj-1787","tags":["다이나믹-프로그래밍","문자열","KMP"],"categories":["PS"]},"excerpt":"위 포스트는 백준 1787 - 문자열의 주기 예측 의 해설입니다. 결국 부분 문자열에서 가장 짧으면서 일치하는 Prefix와 Suffix를 찾으면 된다. (해당 길이를 전체…"},{"frontmatter":{"title":"백준 1055 - 끝이없음","updatedAt":null,"createdAt":"2025/03/05","slug":"boj-1055","tags":["구현","재귀"],"categories":["PS"]},"excerpt":"위 포스트는 백준 1055 - 끝이없음의 해설입니다. 문자열이 재귀적으로 반복하는 것을 알 수 있다.\n\n이때 min과 max의 차이가 최대 100개 정도임을 알 수 있고, 우리는…"},{"frontmatter":{"title":"백준 8872 - 빌라봉","updatedAt":null,"createdAt":"2025/03/04","slug":"boj-8872","tags":["트리","그래프-탐색","그래프-이론","깊이-우선-탐색"],"categories":["PS"]},"excerpt":"위 포스트는 백준 8872 - 빌라봉 문제의 해설입니다. 위 문제에는 여러 개의 트리가 존재한다.\n 임의의 2개의 트리를 서로 이을 때 최대 시간이 최소가 되게 하기 위해서는 각…"},{"frontmatter":{"title":"백준 6569 - 몬드리안의 꿈","updatedAt":null,"createdAt":"2025/02/28","slug":"boj-6569","tags":["다이나믹-프로그래밍","비트마스킹"],"categories":["PS"]},"excerpt":"위 포스트는 백준 6569 - 몬드리안의 꿈에 대한 해설입니다. ...\t ...\t ...\t ...\t ...\t ...\t ...\t ... 채워짐\t 채워짐\t 채워짐\t 채워짐\t 채워짐\t 채워짐…"},{"frontmatter":{"title":"백준 24979 - COW Operations","updatedAt":null,"createdAt":"2025/02/28","slug":"boj-24979","tags":["문자열","누적합","애드-혹"],"categories":["PS"]},"excerpt":"위 포스트는 백준 24979 - COW Operations에 대한 해설입니다. 아이디어1#\n\n주어진 Operation을 해보면 아래와 같은 변환이 가능하다는 것을 알 수 있다.…"},{"frontmatter":{"title":"백준 1646 - 피이보나치 트리","updatedAt":null,"createdAt":"2025/02/26","slug":"boj-1646","tags":["다이나믹-프로그래밍","트리","재귀"],"categories":["PS"]},"excerpt":"위 포스트는 백준 1646 - 피이보나치 트리 문제에 대한 해설입니다. 관찰1#\n\nn번 피이보나치 트리의 루트의 왼쪽 서브트리는 n-2번 째 피이보나치 트리이고, 오른쪽 서브트리는…"},{"frontmatter":{"title":"백준 1155 - 변형 하노이","updatedAt":null,"createdAt":"2025/02/19","slug":"boj-1155","tags":["다이나믹-프로그래밍","애드-혹"],"categories":["PS"]},"excerpt":"위 포스트는 백준 1155 - 변형 하노이 문제의 해설입니다. 아이디어 1#\n\nA번 폴: n번 디스크\n B번 폴: 1 ~ n-1 번 디스크\n C번 폴: 빔\n\n위 경우 n번 디스크는…"},{"frontmatter":{"title":"백준 25315 - N수매화검법","updatedAt":null,"createdAt":"2025/02/18","slug":"boj-25315","tags":["기하학","그리디","선분-교차-판정"],"categories":["PS"]},"excerpt":"백준 25315번 - N수매화검법 문제의 해설입니다. 서로 교차하는 베기 A와 베기 B가 있을 때, 두 베기가 사라지려면 딱 2가지 경우이다.\n WA×(m+1)+WB×(m)W_{A…"},{"frontmatter":{"title":"백준 24491 - Searching for Soulmates","updatedAt":null,"createdAt":"2025/01/13","slug":"boj-24491","tags":["애드-혹","비트마스킹"],"categories":["PS"]},"excerpt":"각 테스트케이스마다 2개의 1 ~ 101810^{18}1018의 수 a, b가 주어질 때, a를 b로 만드는데 드는 최소의 연산 횟수를 구하는 문제이다. 이때 연산은 ×2\\tim…"},{"frontmatter":{"title":"백준 10321 - 요새 건설","updatedAt":null,"createdAt":"2025/01/13","slug":"boj-10321","tags":["기하학","convex-hull"],"categories":["PS"]},"excerpt":"핵심 아이디어# 껍질에 있는 점들을 대상으로 임의의 대각선에 대해서 해당 대각선에서 가장 먼 점 2개를 고르면 해당 대각선으로 만들 수 있는 가장 큰 영역이다. 이때 먼점 2개는…"},{"frontmatter":{"title":"백준 33007 - Greatest of the Greatest Common Divisors","updatedAt":null,"createdAt":"2025/01/11","slug":"boj-33007","tags":["수학","정수론","세그먼트-트리","오프라인-쿼리"],"categories":["PS"]},"excerpt":"핵심 아이디어# 오프라인 쿼리 방식으로, r을 순차적으로 증가시키면서 r을 새롭게 포함시킬 때 해당 인덱스 r과 어떤 인덱스 l을 추가하면 어떤 gcdVal을 얻을 수 있는 지를…"},{"frontmatter":{"title":"백준 17407 - 괄호 문자열과 쿼리","updatedAt":null,"createdAt":"2025/01/01","slug":"boj-17407","tags":["lazy-segment","누적합"],"categories":["PS"]},"excerpt":"풀이# (을 +1, )을 -1로 한 다음 누적합을 먼저 계산한다.\n 이 누적합에 대한 lazy segment tree를 만든다.\n\n만약 x번째 문자를 (에서 )으로 바꾼다면 x…"},{"frontmatter":{"title":"백준 1462 - 퀴즈쇼","updatedAt":null,"createdAt":"2024/12/26","slug":"boj-1462","tags":["누적합","다이나믹-프로그래밍"],"categories":["PS"]},"excerpt":"풀이# dp[i][0] := 1~i 까지 문제를 푸는데, i를 풀고 나서 남은 코인의 갯수가 0개일 때의 최댓값\n dp[i][1] := 1~i 가지 문제를 푸는데, i를 풀고 나서…"}]},"featuredPosts":{"nodes":[]}},"pageContext":{"limit":9,"skip":9,"numPages":2,"currentPage":2,"category":"PS"}},"staticQueryHashes":["3461282698","655531792"],"slicesMap":{}}